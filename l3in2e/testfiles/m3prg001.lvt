%
% Copyright (C) 2008 LaTeX3 project
% 

\documentclass{minimal}
\RequirePackage{expl3}
\input{regression-test}
\begin{document}



\START
\AUTHOR{Will Robertson}

\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Vertical~and~horizontal~mode~(expect~YES~NO~NO~YES)}{
  \par
  \mode_if_vertical:TF   { \YES   }{ \ERROR }
  \mode_if_horizontal:TF { \ERROR }{ \NO    }
  \par
  hello
  \mode_if_vertical:TF   { \ERROR }{ \NO    }
  \mode_if_horizontal:TF { \YES   }{ \ERROR }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Inner~mode~(expect~YES~YES~YES~YES)}{
  \hbox:n{
    \mode_if_horizontal:TF { \YES }{ \ERROR }
    \mode_if_inner:TF      { \YES }{ \ERROR }
  }  
  \vbox:n{
    \mode_if_vertical:TF { \YES }{ \ERROR }
    \mode_if_inner:TF    { \YES }{ \ERROR }
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT   % omit math font loading
$x$
\TIMO

\TEST{Math~mode~(expect~NO~YES~YES~YES)}{
  maths: \mode_if_math:TF{\ERROR}{\NO} 
  $x=y   \mode_if_math:TF{\YES}{\ERROR}$
  \[x=y  \mode_if_math:TF{\YES}{\ERROR}\]
  \[ \begin{array}{c}
       % \ifmmode\YES\else\NO\fi % returns "NO" !!
       \mode_if_math:TF{\YES}{\ERROR} x \\ y
     \end{array} \]
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP{Replicate}{
  \prg_replicate:nn{1}{\YES}
 \NEWLINE
 [\prg_replicate:nn{0}{\ERROR}]
\NEWLINE
  \prg_replicate:nn{7}{\YES}
\NEWLINE
  \prg_replicate:nn{1000}{x}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP{Replication~negative~FAIL}{
  \prg_replicate:nn{-1}{\YES}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\def:Npn \myfunc #1 {[#1]~}
\TESTEXP{Stepwise}{
A:  \prg_stepwise_function:nnnN {0} {1} {5} \myfunc
\NEWLINE
B:
  \prg_stepwise_function:nnnN {0} {1} {-5} \myfunc
\NEWLINE
C:
  \prg_stepwise_function:nnnN {0} {-1} {5} \myfunc
\NEWLINE
D:
  \prg_stepwise_function:nnnN {-1} {-2} {-2} \myfunc
\NEWLINE
E:
  \prg_stepwise_function:nnnN {-1} {-2} {-10} \myfunc
\NEWLINE
F:
 \ERROR % \prg_stepwise_function:nnnN {5} {0} {10} \myfunc  - this dies
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Stepwise~inline}{
  \prg_stepwise_inline:nnnn {0} {1} {5} {\typeout{[#1]}}
  \SEPARATOR
  \NO
 \prg_stepwise_inline:nnnn {0} {1} {-5} {\typeout{[#1]}}
  \SEPARATOR
  \NO
  \prg_stepwise_inline:nnnn {0} {-1} {5} {\typeout{[#1]}}
  \SEPARATOR
  \prg_stepwise_inline:nnnn {-1} {-2} {-2} {\typeout{[#1]}}
  \SEPARATOR
  \prg_stepwise_inline:nnnn {-1} {-2} {-10} {\typeout{[#1]}}
  \SEPARATOR
 \ERROR % \prg_stepwise_inline:nnnn {5} {0} {10} {\typeout{[#1]}}  - this dies
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Stepwise~variable}{
  \prg_stepwise_variable:nnnNn {0} {1} {5} \myvar { \typeout{[\myvar]~} }
  \SEPARATOR
  \NO
  \prg_stepwise_variable:nnnNn {0} {-1} {5} \myvar { \typeout{[\myvar]~} }
  \SEPARATOR
  \NO
  \prg_stepwise_variable:nnnNn {0} {1} {-5} \myvar { \typeout{[\myvar]~} }
  % \SEPARATOR
  % \NO
  % \prg_stepwise_variable:nnnNn {0} {0} {5} \myvar { \typeout{[\myvar]~} }
  \SEPARATOR
  \prg_stepwise_variable:nnnNn {0} {-1} {-5} \myvar { \typeout{[\myvar]~} }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%  \begin{macro}{\group_align_safe_begin:}
%  \begin{macro}{\group_align_safe_end:}
%  \begin{macro}{\scan_align_safe_stop:}

% \begin{macro}{\prg_whiledo:nT}
% \begin{macro}{\prg_whiledo:nF}
% \begin{macro}{\prg_dowhile:nT}
% \begin{macro}{\prg_dowhile:nF}

% \begin{macro}{\prg_case_int:nnn}
% \begin{macro}{\prg_case_dim:nnn}
% \begin{macro}{\prg_case_str:nnn}
% \begin{macro}{\prg_case_tlp:Nnn}
% \begin{macro}{\prg_end_case:nw}
% \begin{macro}{\prg_define_quicksort:nnn}
% \begin{macro}{\prg_quicksort:n}
% \begin{macro}{\prg_quicksort_function:n}
% \begin{macro}{\prg_quicksort_compare:nnTF}


\END
