%
% Copyright (C) 2008 Frank Mittelbach
% 


\documentclass{minimal}
\input{regression-test}

\RequirePackage{l3toks}
\ExplSyntaxOff

\begin{document}
\START
\AUTHOR{Will Robertson}
\ExplSyntaxOn


\TEST{creation}{
  { 
    \toks_new:N \l_test_a_toks
    \toks_new:c {l_test_c_toks} 
%    \toks_new_l:N \l_test_e_toks 
  }
  \toks_show:N \l_test_a_toks
  \toks_show:c {l_test_c_toks}
  \SEPARATOR
  \toks_show:N \l_undefined_toks
}

\TEST{set}{
  \toks_new:N \g_test_b_toks % TODO: \OMIT...\TIMO
  {
    \toks_set:Nn  \l_test_a_toks {a\par A}
    \toks_gset:Nn \g_test_b_toks {b\par B}
    \toks_show:N  \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
}

\TEST{toks_set~variants~(\ERROR~if~missing)}{
  \cs_if_exist:NF \toks_set:Nn  {\ERROR}
  \cs_if_exist:NF \toks_set:No  {\ERROR}
  \cs_if_exist:NF \toks_set:Nd  {\ERROR}
  \cs_if_exist:NF \toks_set:Nf  {\ERROR}
  \cs_if_exist:NF \toks_set:Nx  {\ERROR}
  \cs_if_exist:NF \toks_set:cn  {\ERROR}
  \cs_if_exist:NF \toks_set:co  {\ERROR}
  \cs_if_exist:NF \toks_set:cf  {\ERROR}
  \cs_if_exist:NF \toks_set:cx  {\ERROR}
  \cs_if_exist:NF \toks_gset:Nn {\ERROR}
  \cs_if_exist:NF \toks_gset:No {\ERROR}
  \cs_if_exist:NF \toks_gset:Nx {\ERROR}
  \cs_if_exist:NF \toks_gset:cn {\ERROR}
  \cs_if_exist:NF \toks_gset:co {\ERROR}
  \cs_if_exist:NF \toks_gset:cx {\ERROR}
}

\TEST{clear}{
  \toks_set:Nn \l_test_a_toks {a\par A}
  \toks_set:Nn \g_test_b_toks {b\par B}
  {
    \toks_clear:N  \l_test_a_toks 
    \toks_gclear:N \g_test_b_toks 
    \toks_show:N \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
}

\TEST{use_clear}{
  \toks_set:Nn \l_test_a_toks { \YES \use_none:n }
  \toks_set:Nn \g_test_b_toks { \YES \use_none:n }
  {
    \toks_use_clear:N  \l_test_a_toks {\ERROR\par} 
    \toks_use_gclear:N \g_test_b_toks {\ERROR\par} 
    \SEPARATOR
    \toks_show:N \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
}

\TEST{set_eq}{
  \toks_set:Nn \l_test_a_toks {a\par A}
  \toks_set:Nn \g_test_b_toks {b\par B}
  \toks_set:Nn \l_test_c_toks {c\par C}
  {
    \toks_set_eq:NN  \l_test_a_toks \l_test_c_toks 
    \toks_gset_eq:NN \g_test_b_toks \l_test_c_toks 
    \toks_show:N \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
}

\TEST{put~left/right~on~empty}{
  \toks_clear:N \l_test_a_toks
  \toks_clear:N \g_test_b_toks
  {
    \toks_put_left:Nn  \l_test_a_toks {m}
    \toks_gput_left:Nn \g_test_b_toks {M}
    \toks_show:N \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
  \SEPARATOR
  \toks_clear:N \l_test_a_toks
  \toks_clear:N \g_test_b_toks
  {
    \toks_put_right:Nn  \l_test_a_toks {m}
    \toks_gput_right:Nn \g_test_b_toks {M}
    \toks_show:N \l_test_a_toks
  }
  \toks_show:N \l_test_a_toks
  \toks_show:N \g_test_b_toks
}

\TEST{put~left/right~test~weird}{
  \toks_clear:N      \l_test_a_toks
  \toks_put_left:Nn  \l_test_a_toks {>}
  \toks_put_left:Nn  \l_test_a_toks {#}
  \toks_put_left:Nn  \l_test_a_toks {\par}
  \toks_put_left:Nn  \l_test_a_toks {<}
  \toks_put_right:Nn \l_test_a_toks {>}
  \toks_put_right:Nn \l_test_a_toks {#}
  \toks_put_right:Nn \l_test_a_toks {\par}
  \toks_put_right:Nn \l_test_a_toks {<}
  \toks_show:N       \l_test_a_toks
  \SEPARATOR
  \toks_clear:N       \g_test_b_toks
  \toks_gput_left:Nn  \g_test_b_toks {>}
  \toks_gput_left:Nn  \g_test_b_toks {#}
  \toks_gput_left:Nn  \g_test_b_toks {\par}
  \toks_gput_left:Nn  \g_test_b_toks {<}
  \toks_gput_right:Nn \g_test_b_toks {>}
  \toks_gput_right:Nn \g_test_b_toks {#}
  \toks_gput_right:Nn \g_test_b_toks {\par}
  \toks_gput_right:Nn \g_test_b_toks {<}
  \toks_show:N        \g_test_b_toks
}

\TEST{put_left/right~variants~(\ERROR~if~missing)}{
  \cs_if_exist:NF \toks_put_left:Nn   {\ERROR}
  \cs_if_exist:NF \toks_put_left:No   {\ERROR}
  \cs_if_exist:NF \toks_put_left:Nx   {\ERROR}
  \cs_if_exist:NF \toks_put_left:cn   {\ERROR}
  \cs_if_exist:NF \toks_put_left:co   {\ERROR}
  \cs_if_exist:NF \toks_gput_left:Nn  {\ERROR}
  \cs_if_exist:NF \toks_gput_left:No  {\ERROR}
  \cs_if_exist:NF \toks_gput_left:Nx  {\ERROR}
  \cs_if_exist:NF \toks_gput_left:cn  {\ERROR}
  \cs_if_exist:NF \toks_gput_left:co  {\ERROR}
  \cs_if_exist:NF \toks_put_right:Nn  {\ERROR}
  \cs_if_exist:NF \toks_put_right:No  {\ERROR}
  \cs_if_exist:NF \toks_put_right:Nx  {\ERROR}
  \cs_if_exist:NF \toks_put_right:cn  {\ERROR}
  \cs_if_exist:NF \toks_put_right:co  {\ERROR}
  \cs_if_exist:NF \toks_gput_right:Nn {\ERROR}
  \cs_if_exist:NF \toks_gput_right:No {\ERROR}
  \cs_if_exist:NF \toks_gput_right:Nx {\ERROR}
  \cs_if_exist:NF \toks_gput_right:cn {\ERROR}
  \cs_if_exist:NF \toks_gput_right:co {\ERROR}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% TODO: \OMIT...\TIMO
\toks_new:N \l_test_e_toks
\toks_new:N \l_test_g_toks
\toks_new:N \l_test_i_toks

\toks_set:Nn \l_test_a_toks {}
\toks_set:Nn \l_test_c_toks {   }
\toks_set:Nn \l_test_e_toks {~}
\toks_set:Nn \l_test_g_toks {-}
\toks_set:Nn \l_test_i_toks {\par}

\TESTEXP{toks_if_empty~(expect~T/T/F/F/F)}{
  \toks_if_empty:NTF \l_test_a_toks {\TRUE}{\FALSE}  ^^J
  \toks_if_empty:NTF \l_test_c_toks {\TRUE}{\FALSE}  ^^J
  \toks_if_empty:NTF \l_test_e_toks {\TRUE}{\FALSE}  ^^J
  \toks_if_empty:NTF \l_test_g_toks {\TRUE}{\FALSE}  ^^J
  \toks_if_empty:NTF \l_test_i_toks {\TRUE}{\FALSE}  
}

\TEST{toks_if_empty~variants~(\ERROR~if~not~found)}{
  \cs_if_exist:NF \toks_if_empty_p:N {\ERROR}
  \cs_if_exist:NF \toks_if_empty:NTF {\ERROR}
  \cs_if_exist:NF \toks_if_empty:NT  {\ERROR}
  \cs_if_exist:NF \toks_if_empty:NF  {\ERROR}
  \cs_if_exist:NF \toks_if_empty_p:c {\ERROR}
  \cs_if_exist:NF \toks_if_empty:cTF {\ERROR}
  \cs_if_exist:NF \toks_if_empty:cT  {\ERROR}
  \cs_if_exist:NF \toks_if_empty:cF  {\ERROR}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\toks_set:Nn \l_test_a_toks {}
\toks_set:Nn \l_test_c_toks {}
\toks_set:Nn \l_test_e_toks { }
\toks_set:Nn \l_test_g_toks {~}
\toks_set:Nn \l_test_i_toks {a\par}
\toks_set:Nn \g_test_b_toks {a\par}

\TESTEXP{toks_if_eq~(expect~T/F/T)}{
  \toks_if_eq:NNTF \l_test_a_toks \l_test_c_toks {\TRUE}{\FALSE} ^^J
  \toks_if_eq:NNTF \l_test_e_toks \l_test_g_toks {\TRUE}{\FALSE} ^^J
  \toks_if_eq:NNTF \l_test_i_toks \g_test_b_toks {\TRUE}{\FALSE}
}

\TEST{toks_if_eq~variants~(\ERROR~if~not~found)}{
  \cs_if_exist:NF \toks_if_eq:NNTF  {\ERROR}
  \cs_if_exist:NF \toks_if_eq:NNT   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:NNF   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:NcTF  {\ERROR}
  \cs_if_exist:NF \toks_if_eq:NcT   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:NcF   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:cNTF  {\ERROR}
  \cs_if_exist:NF \toks_if_eq:cNT   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:cNF   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:ccTF  {\ERROR}
  \cs_if_exist:NF \toks_if_eq:ccT   {\ERROR}
  \cs_if_exist:NF \toks_if_eq:ccF   {\ERROR}
  \cs_if_exist:NF \toks_if_eq_p:NN  {\ERROR}
  \cs_if_exist:NF \toks_if_eq_p:cN  {\ERROR}
  \cs_if_exist:NF \toks_if_eq_p:Nc  {\ERROR}
  \cs_if_exist:NF \toks_if_eq_p:cc  {\ERROR}
}


%% THESE WILL PROBABLY BE DELETED:

% \begin{macro}{\toks_put_right:Nd}
% \begin{macro}{\toks_put_right:Nf}% check by hand!
% \begin{macro}{\toks_remove_extra_brace_group:N}

\END
