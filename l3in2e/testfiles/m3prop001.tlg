This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Will Robertson
============================================================
TEST 1: all functions documented/defined
============================================================
Defined   \prop_new:N
Defined   \prop_new:c
Defined   \prop_clear:N
Defined   \prop_clear:c
Defined   \prop_gclear:N
Defined   \prop_gclear:c
Defined   \prop_put:Nnn
Defined   \prop_put:ccn
Defined   \prop_gput:Nnn
Defined   \prop_gput:Nno
Defined   \prop_gput:Nnx
Defined   \prop_gput:Noo
Defined   \prop_gput:Ncn
Defined   \prop_gput:Ooo
Defined   \prop_gput:Nox
Defined   \prop_gput:cnn
Defined   \prop_gput:ccn
Defined   \prop_gput:cco
Defined   \prop_gput:ccx
Defined   \prop_gput_if_new:Nnn
Defined   \prop_get:NnN
Defined   \prop_get:cnN
Defined   \prop_gget:NnN
Defined   \prop_gget:NcN
Defined   \prop_gget:cnN
Defined   \prop_set_eq:NN
Defined   \prop_set_eq:cN
Defined   \prop_set_eq:Nc
Defined   \prop_set_eq:cc
Defined   \prop_gset_eq:NN
Defined   \prop_gset_eq:cN
Defined   \prop_gset_eq:Nc
Defined   \prop_gset_eq:cc
Defined   \prop_get_gdel:NnN
Defined   \prop_del:Nn
Defined   \prop_gdel:Nn
Defined   \prop_map_function:NN
Defined   \prop_map_function:cN
Defined   \prop_map_function:Nc
Defined   \prop_map_function:cc
Defined   \prop_map_inline:Nn
Defined   \prop_map_inline:cn
Defined   \prop_map_break:w
Defined   \prop_show:N
Defined   \prop_show:c
Defined   \prop_display:N
Defined   \prop_display:c
Defined   \prop_if_empty_p:N
Defined   \prop_if_empty_p:c
Defined   \prop_if_empty:NTF
Defined   \prop_if_empty:NT
Defined   \prop_if_empty:NF
Defined   \prop_if_empty:cTF
Defined   \prop_if_empty:cT
Defined   \prop_if_empty:cF
Defined   \prop_if_eq:NNTF
Defined   \prop_if_eq:NNT
Defined   \prop_if_eq:NNF
Defined   \prop_if_eq:cNTF
Defined   \prop_if_eq:cNT
Defined   \prop_if_eq:cNF
Defined   \prop_if_eq:NcTF
Defined   \prop_if_eq:NcT
Defined   \prop_if_eq:NcF
Defined   \prop_if_eq:ccTF
Defined   \prop_if_eq:ccT
Defined   \prop_if_eq:ccF
Defined   \prop_if_in:NnTF
Defined   \prop_if_in:NoTF
Defined   \prop_if_in:ccTF
Defined   \prop_if_in:NnT
Defined   \prop_if_in:NoT
Defined   \prop_if_in:ccT
Defined   \prop_if_in:NnF
Defined   \prop_if_in:NoF
Defined   \prop_if_in:ccF
Defined   \q_prop
============================================================
============================================================
TEST 2: new
============================================================
\l_a_prop=\toks21
\g_b_prop=\toks22
> .
<argument> ...c {g_b_prop}}\prop_show:N \l_a_prop 
                                                  \prop_show:c {g_b_prop}
l.109 }
> .
<recently read> \g_b_prop 
l.109 }
============================================================
============================================================
TEST 3: clear
============================================================
-\q_prop tmp\q_prop {test l\par }-
-\q_prop tmp\q_prop {test g\par }-
--
--
-\q_prop tmp\q_prop {test l\par }-
--
============================================================
============================================================
TEST 4: put
============================================================
-\q_prop tmp\par \q_prop {test l}\q_prop tmp\q_prop {test l\par }-
-\q_prop tmp\par \q_prop {test g}\q_prop tmp\q_prop {test g\par }-
--
-\q_prop tmp\par \q_prop {test g}\q_prop tmp\q_prop {test g\par }-
============================================================
============================================================
TEST 5: put_if_new
============================================================
-\q_prop test\q_prop {test a\par }-
-\q_prop test\q_prop {test b\par }-
-\q_prop test\q_prop {test b\par }-
============================================================
============================================================
TEST 6: set_eq (BROKEN)
============================================================
--
-\q_prop test\q_prop {test b\par }-
-\q_prop test\q_prop {test b\par }-
! Undefined control sequence.
<argument> ...a_prop -}\prop_gset_eq:NN \g_d_prop 
                                                  \g_b_prop \TYPE {-\the \g_...
l.170 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.170 }
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)
-\q_prop test\q_prop {test b\par }-
! Undefined control sequence.
<write> -\the \g_d_prop 
                        -
l.170 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! You can't use `the character -' after \the.
<write> -\the \g_d_prop -
l.170 }
I'm forgetting what you said and using zero instead.
-0
! Missing } inserted.
<inserted text> 
                }
l.170 }
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.
============================================================
============================================================
TEST 7: get
============================================================
macro:->##test a\par 
macro:->##test a\par 
macro:->
macro:->##test a\par 
============================================================
============================================================
TEST 8: get_gdel
============================================================
\q_prop tmpb\q_prop {##test b\par }\q_prop tmpa\q_prop {##test a\par }
! Illegal parameter number in definition of \tmp:w.
<to be read again> 
                   t
l.204 }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
macro:->##test a\par 
macro:->\q_no_value 
\q_prop tmpb\q_prop {##test b\par }
============================================================
============================================================
TEST 9: del
============================================================
\q_prop tmpb\q_prop {##test l b\par }\q_prop tmpa\q_prop {##test l a\par }
\q_prop tmpb\q_prop {##test g b\par }\q_prop tmpa\q_prop {##test g a\par }
! Illegal parameter number in definition of \tmp:w.
<to be read again> 
                   t
l.230 }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \tmp:w.
<to be read again> 
                   t
l.230 }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \tmp:w.
<to be read again> 
                   t
l.230 }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! Illegal parameter number in definition of \tmp:w.
<to be read again> 
                   t
l.230 }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
\q_prop tmpb\q_prop {##test l b\par }
\q_prop tmpb\q_prop {##test g b\par }
\q_prop tmpb\q_prop {##test l b\par }\q_prop tmpa\q_prop {##test l a\par }
\q_prop tmpb\q_prop {##test g b\par }
============================================================
\q_prop tmpb\q_prop {##test g b\par }
============================================================
============================================================
TEST 10: if_empty (expect T/?/F)
============================================================
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 11: if_in (expect T/T/F/F)
============================================================
TRUE
TRUE
FALSE
FALSE
============================================================
TRUE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 12: if_eq (expect T/T/?)
============================================================
TRUE
TRUE
FALSE
============================================================
============================================================
TEST 13: map_function
============================================================
>b---##testb\par <
>a---##testa\par <
============================================================
============================================================
TEST 14: map_function (EXP)
============================================================
>b---testb<
>a---testa<
============================================================
============================================================
TEST 15: map_inline
============================================================
>b---##testb\par <
>a---##testa\par <
============================================================
============================================================
TEST 16: map_break
============================================================
>d---##testd\par <
>c---##testc\par <
============================================================
