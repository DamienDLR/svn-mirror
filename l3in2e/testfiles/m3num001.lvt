%
% Copyright (C) 2008 Frank Mittelbach
% 


\documentclass{minimal}
\input{regression-test}

\RequirePackage{expl3}

\ExplSyntaxOff

% Everything before this is ignored by the test system.
\START

\AUTHOR{Frank Mittelbach}


% don't display stuff from executing \begin{document}
\OMIT
\begin{document}
\TIMO


\ExplSyntaxOn


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% allocating new registers:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\num_new:N \l_testa_num
\num_new:N \g_testa_num

\num_new:N \l_testa_num		% define second time
\num_new:N \g_testa_num		% should give errors

\num_new:N \g_testb_num


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% incrementing + decrementing
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\num_gincr:N \g_testa_num
\num_gincr:N \g_testa_num
\num_gincr:N \g_testa_num

\num_show:N \g_testa_num	% we hope for a value of 3

\num_gzero:N \g_testa_num
\num_gdecr:N \g_testa_num
\num_show:N \g_testa_num	% we hope for a value of -1


\num_set:Nn \l_testa_num \c_max_int
\num_show:N \l_testa_num
\num_incr:N \l_testa_num	% overflow ...
\num_show:N \l_testa_num	% what is max + 1?

\num_decr:N \l_testa_num	% and overflow back ...
\num_show:N \l_testa_num	% and now?

\num_zero:N \l_testa_num
\num_decr:N \l_testa_num
\num_decr:N \l_testa_num
\num_show:N \l_testa_num	% we hope for a value of -2


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% using invalid variables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\num_decr:N \l_testb_num        % error since undefined

\cs_set_nopar:Npn \l_testb_num {}

\num_decr:N \l_testb_num        % but empty kind of works like 0
\num_show:N \l_testb_num	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% using num expr ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\num_set:Nn \l_testa_num { 200 - 15  }
\num_show:N \l_testa_num	% we hope for a value of 185

\num_set:Nn \l_testa_num { 30 / \g_testa_num  }
\num_show:N \l_testa_num	% we hope for a value of 10

\num_set:Nn \l_testa_num { 27 + 3 / \g_testa_num  }
\num_show:N \l_testa_num	% we hope for a value of 28

\num_set:Nn \l_testa_num { (27 + 3 ) / \g_testa_num  }
\num_show:N \l_testa_num	% we hope for a value of 10

\num_gzero:N \g_testa_num
\num_set:Nn \l_testa_num { 5 / \g_testa_num  } % that's division by zero
\num_show:N \l_testa_num	% no idea what TeX does here ...


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% adding and substracting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\num_zero:N \l_testa_num
\num_add:Nn \l_testa_num { 5 * 7 }
\num_add:Nn \l_testa_num { 15 }
\num_show:N \l_testa_num	% we hope for a value of 50
%\num_sub:Nn \l_testa_num { 3 * 5 }
%\num_show:N \l_testa_num	% we hope for a value of 35



\num_gzero:N \g_testa_num
\num_gadd:Nn \g_testa_num { (2 + 13) / (2 * 3) }
\num_gadd:Nn \g_testa_num { 3 }
\num_show:N \g_testa_num	% we hope for a value of 6
%\num_gsub:Nn \g_testa_num { 5 * 5 }
%\num_show:N \g_testa_num	% we hope for a value of -19


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% converting numbers to ...
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% commands do not exist

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% evaluating numeger expressions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\typeout { \num_eval:n {50 / 5 } }  % 10?

\ERROR % supposed to be expandable, so why doesn't it work in typeout?

% \num_eval:n
% \num_div_truncate:nn
% \num_div_round:nn
% \num_mod:nn

% \num_abs:n

\ERROR % write tests above

\cs_set_nopar:Npn\Y{\typeout{yes}}
\cs_set_nopar:Npn\N{\typeout{no}}

\typeout{ 17 < 20 - 5 }
\num_compare:nNnTF {17} < {20 - 5 } \Y \N
\num_compare:nNnF {17} < {20 - 5 } \N

\typeout{ \g_testa_num = -19 }
\num_compare:nNnTF {\g_testa_num} = {-19} \Y \N
\num_compare:nNnT  {\g_testa_num} = {-19} \Y
\num_compare:nNnF  {\g_testa_num} = {-19} \N

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\typeout{ max(1,7) = min(5,8) +2 }
\num_compare:nNnTF {\num_max_of:nn {1}{7}} = {\num_min_of:nn{5}{8} + 2 } \Y \N

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\typeout { \num_convert_from_base_ten:nn {17}{8} }

%\typeout { \num_convert_to_base_ten:nn {21} 8 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\END
