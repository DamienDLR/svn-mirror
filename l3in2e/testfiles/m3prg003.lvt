%
% Copyright (C) 2008 LaTeX3 project
% 

\documentclass{minimal}
\input{regression-test}
\RequirePackage{expl3}

\begin{document}

\START
\AUTHOR{Will Robertson}
\ExplSyntaxOn

\TESTEXP{Basics}{                                  
  \bool_if_p:n { \c_true_bool  }              \NEWLINE
  \bool_if_p:n { \c_false_bool }              \NEWLINE     
  \bool_if_p:n { \c_true_bool  || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_false_bool }          
}

\TESTEXP{Triplet~combinations~I}{                              
  \bool_if_p:n { \c_true_bool  && \c_true_bool  && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_true_bool  && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_false_bool && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_false_bool && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_true_bool  && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_true_bool  && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_false_bool && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_false_bool && \c_false_bool }          
}

\TESTEXP{Triplet~combinations~II}{                             
  \bool_if_p:n { \c_true_bool  || \c_true_bool  || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_true_bool  || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_false_bool || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_false_bool || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_true_bool  || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_true_bool  || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_false_bool || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_false_bool || \c_false_bool }          
}

\TESTEXP{Triplet~combinations~III}{                            
  \bool_if_p:n { \c_true_bool  && \c_true_bool  || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_true_bool  || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_false_bool || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_false_bool || \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_true_bool  || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_true_bool  || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_true_bool  && \c_false_bool || \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool && \c_false_bool || \c_false_bool }          
}

\TESTEXP{Triplet~combinations~IV}{                             
  \bool_if_p:n { \c_true_bool  || \c_true_bool  && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_true_bool  && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_false_bool && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_false_bool && \c_true_bool  }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_true_bool  && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_true_bool  && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_true_bool  || \c_false_bool && \c_false_bool }  \NEWLINE
  \bool_if_p:n { \c_false_bool || \c_false_bool && \c_false_bool }          
}


\TESTEXP{Lazy~evaluation}{
  \bool_if_p:n{
    \intexpr_compare_p:nNn 1=1 &&
    \bool_if_p:n {
      \intexpr_compare_p:nNn 2=3 ||
      \intexpr_compare_p:nNn 4=4 ||
      \intexpr_compare_p:nNn 1=\ERROR % is skipped
    } &&
    \intexpr_compare_p:nNn 2=2 
  }
}


\TESTEXP{XOR}{                   
  \bool_xor_p:nn { \c_true_bool  }{ \c_true_bool  }  \NEWLINE
  \bool_xor_p:nn { \c_true_bool  }{ \c_false_bool }  \NEWLINE
  \bool_xor_p:nn { \c_false_bool }{ \c_true_bool  }  \NEWLINE
  \bool_xor_p:nn { \c_false_bool }{ \c_false_bool }
}


\TEST{bool_set}{
  \bool_set:Nn \l_tmpa_bool {
    \intexpr_compare_p:nNn 1=1 &&
    \bool_if_p:n {
      \intexpr_compare_p:nNn 2=3 ||
      \intexpr_compare_p:nNn 4=4 ||
      \intexpr_compare_p:nNn 1=\ERROR % is skipped
    } &&
    \intexpr_compare_p:nNn 2=2
  }
  \bool_if:NTF \l_tmpa_bool \TRUE \FALSE
}

\END
