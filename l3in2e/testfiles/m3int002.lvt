%
% Copyright (C) 2008 LaTeX3 Project
% 

\documentclass{minimal}
\input{regression-test}

\RequirePackage{l3int}

\begin{document}
\AUTHOR{Will~Robertson}
\START

\TEST{All~defined~functions}{
  \declare@command \int_const:Nn
  \declare@command \c_minus_one
  \declare@command \c_zero
  \declare@command \c_one
  \declare@command \c_two
  \declare@command \c_three
  \declare@command \c_four
  \declare@command \c_five
  \declare@command \c_six
  \declare@command \c_seven
  \declare@command \c_eight
  \declare@command \c_nine
  \declare@command \c_ten
  \declare@command \c_eleven
  \declare@command \c_twelve
  \declare@command \c_thirteen
  \declare@command \c_fourteen
  \declare@command \c_fifteen
  \declare@command \c_sixteen
  \declare@command \c_thirty_two
  \declare@command \c_hundred_one
  \declare@command \c_twohundred_fifty_five
  \declare@command \c_twohundred_fifty_six
  \declare@command \c_thousand
  \declare@command \c_ten_thousand
  \declare@command \c_ten_thousand_one
  \declare@command \c_ten_thousand_two
  \declare@command \c_ten_thousand_three
  \declare@command \c_ten_thousand_four
  \declare@command \c_twenty_thousand
  \declare@command \int_new:N
  \declare@command \int_new:c
  \declare@command \int_new_l:N
  \declare@command \int_incr:N
  \declare@command \int_incr:c
  \declare@command \int_gincr:N
  \declare@command \int_gincr:c
  \declare@command \int_decr:N
  \declare@command \int_decr:c
  \declare@command \int_gdecr:N
  \declare@command \int_gdecr:c
  \declare@command \int_set:Nn
  \declare@command \int_set:cn
  \declare@command \int_gset:Nn
  \declare@command \int_gset:cn
  \declare@command \int_zero:N
  \declare@command \int_zero:c
  \declare@command \int_gzero:N
  \declare@command \int_gzero:c
  \declare@command \int_add:Nn
  \declare@command \int_add:cn
  \declare@command \int_gadd:Nn
  \declare@command \int_gadd:cn
  \declare@command \int_sub:Nn
  \declare@command \int_sub:cn
  \declare@command \int_gsub:Nn
  \declare@command \int_gsub:cn
  \declare@command \int_use:N
  \declare@command \int_use:c
  \declare@command \int_show:N
  \declare@command \int_show:c
  \declare@command \int_to_arabic:n
  \declare@command \int_to_alph:n
  \declare@command \int_to_Alph:n
  \declare@command \int_to_roman:n
  \declare@command \int_to_Roman:n
  \declare@command \int_to_symbol:n
  \declare@command \int_to_roman:w
  \declare@command \int_to_number:w
  \declare@command \int_roman_lcuc_mapping:Nnn
  \declare@command \int_to_roman_lcuc:NN
  \declare@command \int_convert_number_with_rule:nnN
  \declare@command \int_alph_default_conversion_rule:n
  \declare@command \int_Alph_default_conversion_rule:n
  \declare@command \int_symbol_math_conversion_rule:n
  \declare@command \int_symbol_text_conversion_rule:n
  \declare@command \c_max_int
  \declare@command \l_tmpa_int
  \declare@command \l_tmpb_int
  \declare@command \l_tmpc_int
  \declare@command \g_tmpa_int
  \declare@command \g_tmpb_int
  \declare@command \int_eval:n
  \declare@command \int_div_truncate:nn
  \declare@command \int_div_round:nn
  \declare@command \int_mod:nn
  \declare@command \int_compare:nNnTF
  \declare@command \int_compare:nNnFT
  \declare@command \int_compare:nNnT
  \declare@command \int_compare:nNnF
  \declare@command \int_compare_p:nNn
  \declare@command \int_max_of:nn
  \declare@command \int_min_of:nn
  \declare@command \int_abs:n
  \declare@command \int_if_odd:nTF
  \declare@command \int_if_odd:nT
  \declare@command \int_if_odd:nF
  \declare@command \int_if_odd:nFT
  \declare@command \int_if_odd_p:n
  \declare@command \int_whiledo:nNnT
  \declare@command \int_whiledo:nNnF
  \declare@command \int_dowhile:nNnT
  \declare@command \int_dowhile:nNnF
  \declare@command \int_convert_from_base_ten:nn
  \declare@command \int_convert_to_base_ten:nn
  \declare@command \l_loop_int
  \declare@command \int_advance:w
  \declare@command \int_eval:w
  \declare@command \int_eval_end:
  \declare@command \int_convert_number_to_letter:n
  \declare@command \int_pre_eval_one_arg:Nn
  \declare@command \int_pre_eval_two_args:Nnn
  \declare@command \int_get_sign_and_digits:n
  \declare@command \int_get_sign:n
  \declare@command \int_get_digits:n
}

\END
