This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Will Robertson
============================================================
TEST 1: creation
============================================================
Defining \l_a_clist on line ...
Defining \g_b_clist on line ...
Empty --
Empty --
============================================================
============================================================
TEST 2: clearing
============================================================
macro:->
macro:->test a
macro:->
============================================================
undefined
undefined
macro:->
macro:->
undefined
undefined
============================================================
============================================================
TEST 3: clear_new
============================================================
macro:->
macro:->
macro:->test a
undefined
macro:->
macro:->
============================================================
============================================================
TEST 4: (g)set_eq
============================================================
macro:->abc
macro:->abc
macro:->abc
============================================================
macro:->abc
undefined
macro:->
============================================================
macro:->abc
macro:->abc
macro:->abc
============================================================
============================================================
TEST 5: concat
============================================================
macro:->abc,def,uvw,xyz
undefined
============================================================
macro:->ABC,DEF,UVW,XYZ
undefined
============================================================
============================================================
TEST 6: gconcat
============================================================
macro:->abc,def,uvw,xyz
============================================================
macro:->ABC,DEF,UVW,XYZ
============================================================
============================================================
TEST 7: put left
============================================================
Comma-list \l_tmpa_clist contains the elements (without outer braces):
>  {\l_tmpc_tl \par }
>  {\ERROR B\par }
>  {FULL EXPANSION\par }
>  {\l_tmpb_tl \par }
>  {\ERROR A\par }.
\clist_display:N ...\}}}\toks_show:N \l_tmpa_toks 
l.163 }
============================================================
============================================================
TEST 8: put right
============================================================
Comma-list \l_tmpa_clist contains the elements (without outer braces):
>  {\ERROR A\par }
>  {\l_tmpb_tl \par }
>  {FULL EXPANSION\par }
>  {\ERROR B\par }
>  {\l_tmpc_tl \par }.
\clist_display:N ...\}}}\toks_show:N \l_tmpa_toks 
l.176 }
============================================================
============================================================
TEST 9: gput left
============================================================
Comma-list \g_b_clist contains the elements (without outer braces):
>  {\l_tmpc_tl \par }
>  {\ERROR B\par }
>  {FULL EXPANSION\par }
>  {\l_tmpb_tl \par }
>  {\ERROR A\par }.
\clist_display:N ...\}}}\toks_show:N \l_tmpa_toks 
l.191 }
============================================================
============================================================
TEST 10: gput right
============================================================
Comma-list \g_b_clist contains the elements (without outer braces):
>  {\ERROR A\par }
>  {\l_tmpb_tl \par }
>  {FULL EXPANSION\par }
>  {\ERROR B\par }
>  {\l_tmpc_tl \par }.
\clist_display:N ...\}}}\toks_show:N \l_tmpa_toks 
l.206 }
============================================================
============================================================
TEST 11: if_empty (expect Y/Y/N NB. different than seq!!)
============================================================
YES
YES
NO
============================================================
! Undefined control sequence.
l.223 \clist_push:Nn
                     \l_tmpa_clist {a\par}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.224 \clist_push:Nn
                     \l_tmpa_clist {b\par}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.225 \clist_push:Nn
                     \l_tmpa_clist {ZZZ}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.226 \clist_push:Nn
                     \l_tmpa_clist {}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.227 \clist_push:Nn
                     \l_tmpa_clist {~}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.228 \clist_push:Nn
                     \l_tmpa_clist {\par}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.229 \clist_push:Nn
                     \l_tmpa_clist {\ERROR}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.229 \clist_push:Nn \l_tmpa_clist {\ERROR
                                          }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
TEST 12: if_in (expect 2 first false)
============================================================
FALSE
FALSE
! Undefined control sequence.
<argument> \ERROR 
l.238 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \ERROR 
l.238 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \ERROR 
l.238 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> \ERROR 
l.238 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
============================================================
TEST 13: if_in with empty (check this behaviour)
============================================================
TRUE
============================================================
============================================================
TEST 14: if_in (T)
============================================================
============================================================
============================================================
TEST 15: if_in (F)
============================================================
FALSE
FALSE
============================================================
! Undefined control sequence.
l.259 \clist_push:Nn
                     \l_tmpa_clist {a}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.260 \clist_push:Nn
                     \l_tmpa_clist {b\par}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
l.261 \clist_push:Nn
                     \l_tmpa_clist {c}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
TEST 16: map_inline
============================================================
aa
bb\par 
cc
============================================================
============================================================
TEST 17: map_function
============================================================
aa
bb\par 
cc
============================================================
============================================================
TEST 18: map_variable
============================================================
aa
bb\par 
cc
============================================================
============================================================
TEST 19: remove_duplicates
============================================================
! Undefined control sequence.
<argument> ...lear:N \l_tmpa_clist \clist_push:Nn 
                                                  \l_tmpa_clist {a\par }\cli...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> ...l_tmpa_clist {a\par }\clist_push:Nn 
                                                  \l_tmpa_clist {b\par }\cli...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> ...l_tmpa_clist {b\par }\clist_push:Nn 
                                                  \l_tmpa_clist {c\par }\cli...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> ...l_tmpa_clist {c\par }\clist_push:Nn 
                                                  \l_tmpa_clist {a\par }\cli...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> ...l_tmpa_clist {a\par }\clist_push:Nn 
                                                  \l_tmpa_clist {c\par }\cli...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! Undefined control sequence.
<argument> ...l_tmpa_clist {c\par }\clist_push:Nn 
                                                  \l_tmpa_clist {b\par }{\cl...
l.308 }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
