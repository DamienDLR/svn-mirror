%
% Copyright (C) 2008 LaTeX3 Project
% 
\documentclass{minimal}
\input{regression-test}

\RequirePackage{expl3}

\begin{document}
\START
\AUTHOR{Will~Robertson}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TESTEXP{to_str}{
  \tl_to_str:n { abc } \NEWLINE
  \tl_to_str:n { \ERROR } \NEWLINE
  \tl_to_str:n { # }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{if_eq}{
  \tl_if_eq:nnTF {}{}               {\TRUE}{\FALSE}
  \tl_if_eq:nnTF {~}{~~}            {\TRUE}{\FALSE}
  \tl_if_eq:nnTF {abc}{abc}         {\TRUE}{\FALSE}
  \tl_if_eq:nnTF {abc}{abc~}        {\TRUE}{\FALSE}
  \tl_if_eq:nnTF {abc#}{abc#}       {\TRUE}{\FALSE}
  \tl_if_eq:nnTF {abc\par}{abc\par} {\TRUE}{\FALSE}
  \SEPARATOR
  \tl_if_eq:nnTF {}{}               {\TRUE}
  \tl_if_eq:nnTF {~}{~~}            {\TRUE}
  \tl_if_eq:nnT  {abc}{abc}         {\TRUE}
  \tl_if_eq:nnT  {abc#}{abc#}       {\TRUE}
  \tl_if_eq:nnT  {abc\par}{abc\par} {\TRUE}
  \SEPARATOR
  \tl_if_eq:nnF  {abc}{abc~}               {\FALSE}
  \SEPARATOR
  \tl_if_eq:nnTF {}{}               {\FALSE}{\TRUE}
  \tl_if_eq:nnTF {~}{~~}            {\FALSE}{\TRUE}
  \tl_if_eq:nnTF {abc}{abc}         {\FALSE}{\TRUE}
  \tl_if_eq:nnTF {abc}{abc~}        {\FALSE}{\TRUE}
  \tl_if_eq:nnTF {abc#}{abc#}       {\FALSE}{\TRUE}
  \tl_if_eq:nnTF {abc\par}{abc\par} {\FALSE}{\TRUE}
}

\OMIT
\tl_set:Nn \l_tmpa_tl {a}
\tl_set:Nn \l_tmpb_tl {\l_tmpa_tl}
\tl_set:Nn \l_tmpc_tl {\l_tmpb_tl}
\tl_set:Nn \l_tmpd_tl {\l_tmpc_tl}
\tl_set:Nn \l_tmpe_tl {a}
\TIMO

\TEST{if_eq~variants}{
  \tl_if_eq:noTF {ab}{\l_tmpa_tl b} {\TRUE}{\FALSE}
  \tl_if_eq:noT  {ab}{\l_tmpa_tl b} {\TRUE}
  \tl_if_eq:noF  {ab}{\l_tmpa_tl Z} {\FALSE}
  \SEPARATOR
  \tl_if_eq:onTF {\l_tmpa_tl b}{ab} {\TRUE}{\FALSE}
  \tl_if_eq:onT  {\l_tmpa_tl b}{ab} {\TRUE}
  \tl_if_eq:onF  {\l_tmpa_tl Z}{ab} {\FALSE}
  \SEPARATOR
  \tl_if_eq:oxTF {\l_tmpa_tl}{\l_tmpd_tl}   {\TRUE}{\FALSE}
  \tl_if_eq:oxT  {\l_tmpa_tl}{\l_tmpd_tl}   {\TRUE}
  \tl_if_eq:oxF  {\l_tmpa_tl}{\l_tmpd_tl Z} {\FALSE}
  \SEPARATOR
  \tl_if_eq:xoTF {\l_tmpd_tl}  {\l_tmpa_tl} {\TRUE}{\FALSE}
  \tl_if_eq:xoT  {\l_tmpd_tl}  {\l_tmpa_tl} {\TRUE}
  \tl_if_eq:xoF  {\l_tmpd_tl Z}{\l_tmpa_tl} {\FALSE}
  \SEPARATOR
  \tl_if_eq:xxTF {\l_tmpd_tl}{\l_tmpc_tl}   {\TRUE}{\FALSE}
  \tl_if_eq:xxT  {\l_tmpd_tl}{\l_tmpc_tl}   {\TRUE}
  \tl_if_eq:xxF  {\l_tmpd_tl}{\l_tmpc_tl Z} {\FALSE}
  \SEPARATOR
  \tl_if_eq:nxTF {ab}{\l_tmpc_tl b} {\TRUE}{\FALSE}
  \tl_if_eq:xnT  {\l_tmpd_tl b}{ab} {\TRUE}
  \tl_if_eq:nxF  {ab}{\l_tmpc_tl Z} {\FALSE}
  \SEPARATOR
  \tl_if_eq:ooTF {\l_tmpa_tl b}{\l_tmpe_tl b} {\TRUE}{\FALSE}
  \tl_if_eq:ooT  {\l_tmpa_tl b}{\l_tmpe_tl b} {\TRUE}
  \tl_if_eq:ooF  {\l_tmpa_tl b}{\l_tmpe_tl Z} {\FALSE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tl_set:Nn \l_tmpa_tl {}
\tl_set:Nn \l_tmpb_tl {~}
\tl_set:Nn \l_tmpc_tl {X}
\TESTEXP{if_empty~(expect~T/F/F~repeated)}{
  \tl_if_empty_p:n { }~
  \tl_if_empty_p:n {~}~
  \tl_if_empty_p:n {X}\NEWLINE
  \tl_if_empty:nTF { } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_empty:nTF {~} {\TRUE}{\FALSE} \NEWLINE
  \tl_if_empty:nTF {X} {\TRUE}{\FALSE} \NEWLINE
  \NEWLINE
  \tl_if_empty_p:o { \l_tmpa_tl }~
  \tl_if_empty_p:o { \l_tmpb_tl }~
  \tl_if_empty_p:o { \l_tmpc_tl }\NEWLINE
  \tl_if_empty:oTF { \l_tmpa_tl } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_empty:oTF { \l_tmpb_tl } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_empty:oTF { \l_tmpc_tl } {\TRUE}{\FALSE} \NEWLINE
}

\TESTEXP{if_blank~(expect~T/T/F~repeated)}{
  \tl_if_blank_p:n { }~
  \tl_if_blank_p:n {~}~
  \tl_if_blank_p:n {X}\NEWLINE
  \tl_if_blank:nTF { } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_blank:nTF {~} {\TRUE}{\FALSE} \NEWLINE
  \tl_if_blank:nTF {X} {\TRUE}{\FALSE} \NEWLINE
  \NEWLINE
  \tl_if_blank_p:o { \l_tmpa_tl }~
  \tl_if_blank_p:o { \l_tmpb_tl }~
  \tl_if_blank_p:o { \l_tmpc_tl }\NEWLINE
  \tl_if_blank:oTF { \l_tmpa_tl } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_blank:oTF { \l_tmpb_tl } {\TRUE}{\FALSE} \NEWLINE
  \tl_if_blank:oTF { \l_tmpc_tl } {\TRUE}{\FALSE} \NEWLINE
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{if_in}{
  \tl_if_in:nnTF {123abc\par}  {abc\par} {\TRUE}{\FALSE}
  \tl_if_in:nnTF {123ab~cdef} {ab~c}     {\TRUE}{\FALSE}
  \SEPARATOR
  \tl_set:Nn \l_tmpa_tl { abc~{abc}~abc }
  \tl_if_in:onTF {\l_tmpa_tl}  {abc~} {\TRUE}{\FALSE}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tl_set:Nn \l_tmpa_tl { abc~{abc}~abc }
\TESTEXP{Reversing~(TLIST)}{
  \tl_reverse:n { abc~{abc}~abc } \NEWLINE
  \tl_reverse:o { \l_tmpa_tl }
}  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tl_set:Nn \l_tmpa_tl { 123456789 }
\tl_set:Nn \l_tmpb_tl { 1234~6789 }
\tl_set:Nn \l_tmpc_tl { 1234{abcdef}6789 }
\TESTEXP{elt_count}{
  \tl_elt_count:n { 123456789 } \NEWLINE
  \tl_elt_count:n { 1234~6789 } \NEWLINE
  \tl_elt_count:n { 1234{abcdef}6789 } \NEWLINE
  \tl_elt_count:o { \l_tmpa_tl } \NEWLINE
  \tl_elt_count:o { \l_tmpb_tl } \NEWLINE
  \tl_elt_count:o { \l_tmpc_tl }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{to_lowercase/uppercase}{
  \tl_to_lowercase:n { \TYPE {ABC} }
  \tl_to_lowercase:n { \TYPE {A{B}C} }
  \tl_to_uppercase:n { \TYPE {abc} }
  \tl_to_uppercase:n { \TYPE {a{b}c} }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\tl_set:Nn \l_tmpa_tl { \l_tmpb_tl }
\tl_set:Nn \l_tmpb_tl { \l_tmpc_tl }
\tl_set:Nn \l_tmpc_tl { a b c x y z }
\TESTEXP{heads/tails}{
  % I'm not worrying about the :w versions
  % because they're used internally.
  \tl_head:n   { a \ERROR }~
  \tl_head_i:n { a \ERROR }~
  \tl_tail:n { \ERROR z }~
  \tl_tail:f { \l_tmpa_tl }~
  \NEWLINE
  \tl_head_iii:n { abcdef }~
  \tl_head_iii:f { \l_tmpc_tl }
}

\TESTEXP{heads/tails~broken}{
  % I'm not worrying about the :w versions
  % because they're used internally.
  -\tl_head:n   { }-~
  \NEWLINE
  \tl_head_iii:n { a }~
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_set:Npn \tl_tmp:w #1 {[#1]~}
\TESTEXP{map_function}{
  \tl_map_function:nN {abc{{A}B}C} \tl_tmp:w
  \tl_map_function:nN {abc{{A}B}C} {\tl_tmp:w}
}

\TEST{map_inline}{
  \tl_map_inline:nn {abc{{A}B}C} {\TYPE{[#1]}}
}

\TEST{map_variable}{
  \tl_map_variable:nNn {ab{c{A}B}C} \ii {
    \TYPE{[\ii]~}
  }
}

\TEST{map_break~inline/variable}{
  \tl_map_inline:nn {abc\ERROR} {
    \tl_if_eq:nnTF {#1} {c} {
      \tl_map_break:w
    }{
      \TYPE{[#1]}    
    }
  }  
  \SEPARATOR
  \tl_map_variable:nNn {abc\ERROR} \ii {
    \tl_if_eq:noTF {c} {\ii} {
      \tl_map_break:w
    }{
      \TYPE{[\ii]}    
    }
  }
}

\cs_set:Npn \tl_tmp:w #1 {    
  \tl_if_eq:nnTF {#1} {c} {
    \tl_map_break:w
  }{
    \TYPE{[#1]}    
  }
}
\TESTEXP{map_break~function}{
  \tl_map_function:nN {a{b}c\ERROR} {\tl_tmp:w}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begingroup
\catcode`\a=12
\gdef\Aother{a}
\endgroup

\TESTEXP{head_eq_meaning}{
  \tl_if_head_eq_meaning_p:nN {abc} a \NEWLINE
  \tl_if_head_eq_meaning:nNTF {abc} a  {\TRUE}{\FALSE} \NEWLINE
  \exp_args:Nno \tl_if_head_eq_meaning:nNF {abc} \Aother  {\FALSE} \NEWLINE
  \tl_if_head_eq_meaning:nNT  {~abc} a {\TRUE} \NEWLINE
  \tl_if_head_eq_meaning:nNTF {\ERROR\ERROR} \ERROR {\TRUE}{\FALSE} \NEWLINE
  \tl_if_head_eq_meaning:nNTF {###} # {\TRUE}{\FALSE} \NEWLINE
}

\TESTEXP{head_eq_charcode:nN}{
  \tl_if_head_eq_charcode_p:nN {abc} a \NEWLINE
  \tl_if_head_eq_charcode:nNTF {abc} a  {\TRUE}{\FALSE} \NEWLINE
  \exp_args:Nno \tl_if_head_eq_charcode:nNT {abc} \Aother  {\TRUE} \NEWLINE
  \exp_args:Nno \tl_if_head_eq_charcode:nNF {abc} B  {\FALSE} \NEWLINE
  \tl_if_head_eq_charcode:nNT  {~abc} a {\TRUE} \NEWLINE
  \tl_if_head_eq_charcode:nNTF {\ERROR\ERROR} \ERROR {\TRUE}{\FALSE} \NEWLINE
  \tl_if_head_eq_charcode:nNTF {###} # {\TRUE}{\FALSE} \NEWLINE
}

\OMIT
\tl_set:Nn \l_tmpa_tl {abc}
\tl_set:Nn \l_tmpb_tl {\l_tmpa_tl}
\tl_set:Nn \l_tmpc_tl {~howdy}
\tl_set:Nn \l_tmpd_tl {\exp_stop_f: \ERROR\ERROR}
\tl_set:Nn \l_tmpe_tl {##}
\TIMO

\TESTEXP{head_eq_charcode:fN}{
  \tl_if_head_eq_charcode_p:fN {\l_tmpa_tl} a \NEWLINE
  \tl_if_head_eq_charcode:fNTF {\l_tmpb_tl} a {\TRUE}{\FALSE} \NEWLINE
  \tl_if_head_eq_charcode:fNT  {\l_tmpd_tl} \ERROR {\TRUE} \NEWLINE
  \tl_if_head_eq_charcode:fNF  {\l_tmpe_tl} $ {\FALSE} \NEWLINE
}

\TESTEXP{head_eq_catcode}{
  \tl_if_head_eq_catcode_p:nN {abc} a \NEWLINE
  \tl_if_head_eq_catcode:nNTF {abc} a  {\TRUE}{\FALSE} \NEWLINE
  \exp_args:Nno \tl_if_head_eq_catcode:nNF {abc} \Aother  {\FALSE} \NEWLINE
  \tl_if_head_eq_catcode:nNT  {~abc} a {\TRUE} \NEWLINE
  \tl_if_head_eq_catcode:nNTF {\ERROR\ERROR} \ERROR {\TRUE}{\FALSE} \NEWLINE
  \tl_if_head_eq_catcode:nNTF {###} # {\TRUE}{\FALSE} \NEWLINE
}

\END

