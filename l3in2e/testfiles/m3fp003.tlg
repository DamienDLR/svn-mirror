This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: LaTeX3 Project
============================================================
TEST 1: Creating new fps
============================================================
! This is a LaTeX bug: check coding!
! Command name `\l_A_fp' already defined! Current meaning: macro:->+0.000000000
For immediate help type H <return>.
 ...                                              
l.24 }
There is a coding bug somewhere around here.
This probably needs examining by an expert.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.24 }
> \g_A_fp=macro:
->+0.000000000.
<argument> \g_A_fp 
l.24 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.24 }
============================================================
============================================================
TEST 2: Set fp
============================================================
> \l_A_fp=macro:
->+123.456000000.
<argument> \l_A_fp 
l.51 }
> \l_B_fp=macro:
->-123.456000000.
<argument> \l_B_fp 
l.51 }
> \g_A_fp=macro:
->+3.000000000.
<argument> \g_A_fp 
l.51 }
> \g_B_fp=macro:
->+0.000000000.
<argument> \g_B_fp 
l.51 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.51 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.51 }
> \l_A_fp=macro:
->-0.001000000.
<argument> \l_A_fp 
l.51 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.51 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.51 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.51 }
> \g_A_fp=macro:
->+3.000000000.
<argument> \g_A_fp 
l.51 }
> \g_B_fp=macro:
->+0.000000000.
<argument> \g_B_fp 
l.51 }
============================================================
============================================================
TEST 3: Set fp from dimen
============================================================
> \l_A_fp=macro:
->+1.000000000.
<argument> \l_A_fp 
l.70 }
> \l_B_fp=macro:
->+16383.999980000.
<argument> \l_B_fp 
l.70 }
> \g_A_fp=macro:
->+0.000020000.
<argument> \g_A_fp 
l.70 }
> \g_B_fp=macro:
->+2845.275590000.
<argument> \g_B_fp 
l.70 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.70 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.70 }
> \g_A_fp=macro:
->+0.000020000.
<argument> \g_A_fp 
l.70 }
> \g_B_fp=macro:
->+2845.275590000.
<argument> \g_B_fp 
l.70 }
============================================================
============================================================
TEST 4: Zero fp
============================================================
> \l_A_fp=macro:
->+1.234000000.
<argument> \l_A_fp 
l.87 }
> \g_A_fp=macro:
->+1.234000000.
<argument> \g_A_fp 
l.87 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.87 }
> \g_A_fp=macro:
->+0.000000000.
<argument> \g_A_fp 
l.87 }
> \l_A_fp=macro:
->+1.234000000.
<argument> \l_A_fp 
l.87 }
> \g_A_fp=macro:
->+0.000000000.
<argument> \g_A_fp 
l.87 }
============================================================
============================================================
TEST 5: Set fps equal
============================================================
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.106 }
> \g_B_fp=macro:
->+0.000000000.
<argument> \g_B_fp 
l.106 }
> \l_B_fp=macro:
->+123.456000000.
<argument> \l_B_fp 
l.106 }
> \g_B_fp=macro:
->+123.456000000.
<argument> \g_B_fp 
l.106 }
> \l_B_fp=macro:
->+0.000000000.
<argument> \l_B_fp 
l.106 }
> \g_B_fp=macro:
->+123.456000000.
<argument> \g_B_fp 
l.106 }
============================================================
============================================================
TEST 6: Test if fp infinite (expect F/F/T/T)
============================================================
FALSE
FALSE
TRUE
TRUE
============================================================
============================================================
TEST 7: Test if fp positive infinity (expect F/F/T/F)
============================================================
FALSE
FALSE
TRUE
FALSE
============================================================
============================================================
TEST 8: Test if fp negative infinity (expect F/F/F/T)
============================================================
FALSE
FALSE
FALSE
TRUE
============================================================
============================================================
TEST 9: Test if fp undefined (expect F/F/F/T)
============================================================
FALSE
FALSE
FALSE
TRUE
============================================================
============================================================
TEST 10: Test if fp zero (expect F/T/F/F)
============================================================
FALSE
TRUE
FALSE
FALSE
============================================================
============================================================
TEST 11: Convert to absolute values
============================================================
> \l_A_fp=macro:
->+111.111000000.
<argument> \l_A_fp 
l.188 }
> \l_B_fp=macro:
->+222.222000000.
<argument> \l_B_fp 
l.188 }
> \g_A_fp=macro:
->+333.333000000.
<argument> \g_A_fp 
l.188 }
> \g_B_fp=macro:
->+444.444000000.
<argument> \g_B_fp 
l.188 }
> \l_A_fp=macro:
->+111.111000000.
<argument> \l_A_fp 
l.188 }
> \l_B_fp=macro:
->+222.222000000.
<argument> \l_B_fp 
l.188 }
> \g_A_fp=macro:
->+333.333000000.
<argument> \g_A_fp 
l.188 }
> \g_B_fp=macro:
->+444.444000000.
<argument> \g_B_fp 
l.188 }
> \l_A_fp=macro:
->-111.111000000.
<argument> \l_A_fp 
l.188 }
> \l_B_fp=macro:
->+222.222000000.
<argument> \l_B_fp 
l.188 }
> \g_A_fp=macro:
->+333.333000000.
<argument> \g_A_fp 
l.188 }
> \g_B_fp=macro:
->+444.444000000.
<argument> \g_B_fp 
l.188 }
============================================================
============================================================
TEST 12: Convert to negative values
============================================================
> \l_A_fp=macro:
->+111.111000000.
<argument> \l_A_fp 
l.223 }
> \l_B_fp=macro:
->-222.222000000.
<argument> \l_B_fp 
l.223 }
> \g_A_fp=macro:
->+333.333000000.
<argument> \g_A_fp 
l.223 }
> \g_B_fp=macro:
->-444.444000000.
<argument> \g_B_fp 
l.223 }
> \l_A_fp=macro:
->-111.111000000.
<argument> \l_A_fp 
l.223 }
> \l_B_fp=macro:
->+222.222000000.
<argument> \l_B_fp 
l.223 }
> \g_A_fp=macro:
->-333.333000000.
<argument> \g_A_fp 
l.223 }
> \g_B_fp=macro:
->+444.444000000.
<argument> \g_B_fp 
l.223 }
> \l_A_fp=macro:
->-111.111000000.
<argument> \l_A_fp 
l.223 }
> \l_B_fp=macro:
->+222.222000000.
<argument> \l_B_fp 
l.223 }
> \g_A_fp=macro:
->+333.333000000.
<argument> \g_A_fp 
l.223 }
> \g_B_fp=macro:
->-444.444000000.
<argument> \g_B_fp 
l.223 }
============================================================
============================================================
TEST 13: Addition
============================================================
> \l_A_fp=macro:
->+1.000000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+101.000000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+101.990000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+102.000000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->-2898.123000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+7101.877000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+99.123456000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->-39900.876544000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+99.123456000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+999999999.999999999.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+1999999999.999999998.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->-1.234000000.
<argument> \l_A_fp 
l.262 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.262 }
> \g_A_fp=macro:
->-0.001000000.
<argument> \g_A_fp 
l.262 }
> \g_A_fp=macro:
->-1.000000000.
<argument> \g_A_fp 
l.262 }
> \l_A_fp=macro:
->+123.456000000.
<argument> \l_A_fp 
l.262 }
> \g_A_fp=macro:
->-1.000000000.
<argument> \g_A_fp 
l.262 }
============================================================
============================================================
TEST 14: Subtraction
============================================================
> \l_A_fp=macro:
->+1.000000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-99.000000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-99.990000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-100.000000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->+2900.123000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-7099.877000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->+99.123456000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->+40099.123456000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-999999999.999999999.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-1999999999.999999998.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-1999999999.999999998.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->-1.234000000.
<argument> \l_A_fp 
l.301 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.301 }
> \g_A_fp=macro:
->-0.001000000.
<argument> \g_A_fp 
l.301 }
> \g_A_fp=macro:
->-1.000000000.
<argument> \g_A_fp 
l.301 }
> \l_A_fp=macro:
->+123.456000000.
<argument> \l_A_fp 
l.301 }
> \g_A_fp=macro:
->-1.000000000.
<argument> \g_A_fp 
l.301 }
============================================================
============================================================
TEST 15: Multiplication
============================================================
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.334 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.334 }
! LaTeX Error
(LaTeX) Arithmetic overflow.
For immediate help type H <return>.
 ...                                              
l.334 }
The calculation requested exceeds the capacity
of the fixed-point unit.
> \l_A_fp=macro:
->+1.000000000.
<argument> \l_A_fp 
l.334 }
> \l_A_fp=macro:
->+7.006652000.
<argument> \l_A_fp 
l.334 }
> \l_A_fp=macro:
->-7.006652000.
<argument> \l_A_fp 
l.334 }
> \l_A_fp=macro:
->-7.006652000.
<argument> \l_A_fp 
l.334 }
> \l_A_fp=macro:
->+7.006652000.
<argument> \l_A_fp 
l.334 }
> \g_A_fp=macro:
->+7.006652000.
<argument> \g_A_fp 
l.334 }
> \l_A_fp=macro:
->+123.456000000.
<argument> \l_A_fp 
l.334 }
> \g_A_fp=macro:
->+7.006652000.
<argument> \g_A_fp 
l.334 }
============================================================
============================================================
TEST 16: Division
============================================================
> \l_A_fp=macro:
->X0.000000000.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->X0.000000000.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->+0.217330047.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->-0.217330047.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->-0.217330047.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->+0.217330047.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->+1111111.111111100.
<argument> \l_A_fp 
l.376 }
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.376 }
! Arithmetic overflow.
\fp_div_store: ...l_fp_div_offset_int \scan_stop: 
                                                  \tex_ifnum:D \l_fp_div_off...
l.376 }
I can't evaluate this expression,
since the result is out of range.
> \l_A_fp=macro:
->+0.000000000.
<argument> \l_A_fp 
l.376 }
> \g_A_fp=macro:
->-0.000101010.
<argument> \g_A_fp 
l.376 }
> \l_A_fp=macro:
->+123.456000000.
<argument> \l_A_fp 
l.376 }
> \g_A_fp=macro:
->-0.000101010.
<argument> \g_A_fp 
l.376 }
============================================================
