This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Will Robertson
============================================================
TEST 1: all functions documented/defined
============================================================
Defined   \clist_new:N
Defined   \clist_new:c
Defined   \clist_clear:N
Defined   \clist_clear:c
Defined   \clist_gclear:N
Defined   \clist_gclear:c
Defined   \clist_clear_new:N
Defined   \clist_clear_new:c
Defined   \clist_gclear_new:N
Defined   \clist_gclear_new:c
Defined   \clist_put_left:Nn
Defined   \clist_put_left:No
Defined   \clist_put_left:Nx
Defined   \clist_put_left:cn
Defined   \clist_put_left:co
Defined   \clist_put_right:Nn
Defined   \clist_put_right:No
Defined   \clist_put_right:Nx
Defined   \clist_put_right:cn
Defined   \clist_put_right:co
Defined   \clist_gput_left:Nn
Defined   \clist_gput_left:No
Defined   \clist_gput_left:Nx
Defined   \clist_gput_left:cn
Defined   \clist_gput_left:co
Defined   \clist_gput_right:Nn
Defined   \clist_gput_right:No
Defined   \clist_gput_right:Nx
Defined   \clist_gput_right:cn
Defined   \clist_gput_right:co
Defined   \clist_gput_right:NC
Defined   \clist_get:NN
Defined   \clist_get:cN
Defined   \clist_set_eq:NN
Defined   \clist_gset_eq:NN
Defined   \clist_gset_eq:cN
Defined   \clist_gset_eq:Nc
Defined   \clist_gset_eq:cc
Defined   \clist_concat:NNN
Defined   \clist_gconcat:NNN
Defined   \clist_gconcat:NNc
Defined   \clist_gconcat:ccc
Defined   \clist_remove_duplicates:N
Defined   \clist_gremove_duplicates:N
Defined   \clist_use:N
Defined   \clist_use:c
Defined   \clist_show:N
Defined   \clist_show:c
Defined   \clist_display:N
Defined   \clist_display:c
Defined   \clist_map_function:NN
Defined   \clist_map_function:cN
Defined   \clist_map_function:nN
Defined   \clist_map_inline:Nn
Defined   \clist_map_inline:cn
Defined   \clist_map_inline:nn
Defined   \clist_map_variable:NNn
Defined   \clist_map_variable:cNn
Defined   \clist_map_variable:nNn
Defined   \clist_map_break:w
Defined   \clist_if_empty_p:N
Defined   \clist_if_empty:NTF
Defined   \clist_if_empty:NT
Defined   \clist_if_empty:NF
Defined   \clist_if_empty_p:c
Defined   \clist_if_empty:cTF
Defined   \clist_if_empty:cT
Defined   \clist_if_empty:cF
Defined   \clist_if_eq_p:NN
Defined   \clist_if_eq:NNTF
Defined   \clist_if_eq:NNT
Defined   \clist_if_eq:NNF
Defined   \clist_if_eq_p:cN
Defined   \clist_if_eq:cNTF
Defined   \clist_if_eq:cNT
Defined   \clist_if_eq:cNF
Defined   \clist_if_eq_p:Nc
Defined   \clist_if_eq:NcTF
Defined   \clist_if_eq:NcT
Defined   \clist_if_eq:NcF
Defined   \clist_if_eq_p:cc
Defined   \clist_if_eq:ccTF
Defined   \clist_if_eq:ccT
Defined   \clist_if_eq:ccF
Defined   \clist_if_in:NnTF
Defined   \clist_if_in:NnT
Defined   \clist_if_in:NnF
Defined   \clist_if_in:NoTF
Defined   \clist_if_in:NoT
Defined   \clist_if_in:NoF
Defined   \clist_if_in:cnTF
Defined   \clist_if_in:cnT
Defined   \clist_if_in:cnF
Defined   \clist_if_in:coTF
Defined   \clist_if_in:coT
Defined   \clist_if_in:coF
Defined   \clist_if_empty_err:N
Defined   \l_clist_remove_duplicates_clist
Defined   \clist_push:Nn
Defined   \clist_push:No
Defined   \clist_push:cn
Defined   \clist_gpush:Nn
Defined   \clist_gpush:No
Defined   \clist_gpush:cn
Defined   \clist_pop:NN
Defined   \clist_pop:cN
Defined   \clist_gpop:NN
Defined   \clist_gpop:cN
Defined   \clist_top:NN
Defined   \clist_top:cN
============================================================
============================================================
TEST 2: creation
============================================================
Defining \l_a_clist on line 141
Defining \g_b_clist on line 141
Empty --
Empty --
============================================================
============================================================
TEST 3: clearing
============================================================
macro:->
macro:->test a
macro:->
============================================================
undefined
undefined
macro:->
macro:->
undefined
undefined
============================================================
============================================================
TEST 4: clear_new
============================================================
macro:->
macro:->
macro:->test a
undefined
macro:->
macro:->
============================================================
============================================================
TEST 5: (g)set_eq
============================================================
macro:->abc
macro:->abc
macro:->abc
============================================================
macro:->abc
undefined
macro:->
============================================================
macro:->abc
macro:->abc
macro:->abc
============================================================
============================================================
TEST 6: concat
============================================================
macro:->abc,def,uvw,xyz
undefined
============================================================
macro:->ABC,DEF,UVW,XYZ
undefined
============================================================
============================================================
TEST 7: gconcat
============================================================
macro:->abc,def,uvw,xyz
============================================================
macro:->ABC,DEF,UVW,XYZ
============================================================
============================================================
TEST 8: put left
============================================================
Comma-list \l_tmpa_clist contains the elements (without outer braces):
>     {\l_tmpc_tlp \par }
>     {\ERROR B\par }
>     {FULL EXPANSION\par }
>     {\l_tmpb_tlp \par }
>     {\ERROR A\par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.279 }
============================================================
============================================================
TEST 9: put right
============================================================
Comma-list \l_tmpa_clist contains the elements (without outer braces):
>     {\ERROR A\par }
>     {\l_tmpb_tlp \par }
>     {FULL EXPANSION\par }
>     {\ERROR B\par }
>     {\l_tmpc_tlp \par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.292 }
============================================================
============================================================
TEST 10: gput left
============================================================
Comma-list \g_b_clist contains the elements (without outer braces):
>     {\l_tmpc_tlp \par }
>     {\ERROR B\par }
>     {FULL EXPANSION\par }
>     {\l_tmpb_tlp \par }
>     {\ERROR A\par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.307 }
============================================================
============================================================
TEST 11: gput right
============================================================
Comma-list \g_b_clist contains the elements (without outer braces):
>     {\ERROR A\par }
>     {\l_tmpb_tlp \par }
>     {FULL EXPANSION\par }
>     {\ERROR B\par }
>     {\l_tmpc_tlp \par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.322 }
============================================================
============================================================
TEST 12: if_empty (expect Y/Y/N NB. different than seq!!)
============================================================
YES
YES
NO
============================================================
============================================================
TEST 13: get (expect an error first)
============================================================
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.358 }
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.
Empty --
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.358 }
(That was another \errmessage.)
Empty --
a\par 
Empty --
b\par 
============================================================
============================================================
TEST 14: push (same as put_left)
============================================================
Comma-list \l_tmpa_clist contains the elements (without outer braces):
>     {\ERROR C\par }
>     {\ERROR B\par }
>     {\ERROR A\par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.369 }
============================================================
============================================================
TEST 15: gpush (same as gput_left)
============================================================
Comma-list \g_b_clist contains the elements (without outer braces):
>     {\ERROR C\par }
>     {\ERROR B\par }
>     {\ERROR A\par }.
\clist_display:N ...r }}\toks_show:N \l_tmpa_toks 
l.380 }
============================================================
============================================================
TEST 16: top (same as get)
============================================================
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.402 }
(That was another \errmessage.)
Empty --
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.402 }
(That was another \errmessage.)
Empty --
a\par 
Empty --
b\par 
============================================================
============================================================
TEST 17: if_in (expect 2 first false)
============================================================
FALSE
FALSE
TRUE
TRUE
TRUE
TRUE
============================================================
============================================================
TEST 18: if_in with empty (check this behaviour)
============================================================
FALSE
============================================================
============================================================
TEST 19: if_in (T)
============================================================
TRUE
TRUE
TRUE
TRUE
============================================================
============================================================
TEST 20: if_in (F)
============================================================
FALSE
FALSE
============================================================
============================================================
TEST 21: map_inline
============================================================
c
b\par 
a
c
b\par 
a
aa
bb\par 
cc
============================================================
============================================================
TEST 22: map_function
============================================================
c
b\par 
a
c
b\par 
a
aa
bb\par 
cc
============================================================
============================================================
TEST 23: map_variable
============================================================
c
b\par 
a
c
b\par 
a
aa
bb\par 
cc
============================================================
============================================================
TEST 24: pop
============================================================
c
> \l_tmpa_clist=macro:
->b\par ,a.
<argument> \l_tmpa_clist 
l.491 }
b\par 
> \l_tmpa_clist=macro:
->a.
<argument> \l_tmpa_clist 
l.491 }
a
> \l_tmpa_clist=macro:
->.
<argument> \l_tmpa_clist 
l.491 }
============================================================
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.491 }
(That was another \errmessage.)
> \l_tmpa_clist=macro:
->.
<argument> \l_tmpa_clist 
l.491 }
============================================================
============================================================
TEST 25: gpop
============================================================
local->c.
global->.
> \l_tmpa_clist=macro:
->b\par ,a.
<argument> \l_tmpa_clist 
l.522 }
local->b\par .
global->.
> \l_tmpa_clist=macro:
->a.
<argument> \l_tmpa_clist 
l.522 }
local->a.
global->.
> \l_tmpa_clist=macro:
->.
<argument> \l_tmpa_clist 
l.522 }
============================================================
This is a LaTeX bug! Check coding!
! Empty comma-list `\l_tmpa_clist'.
\err_latex_bug:x ...coding!}\tex_errmessage:D {#1}
l.522 }
(That was another \errmessage.)
local->.
global->.
> \l_tmpa_clist=macro:
->.
<argument> \l_tmpa_clist 
l.522 }
============================================================
============================================================
TEST 26: remove_duplicates
============================================================
b\par ,c\par ,a\par 
b\par ,c\par ,a\par ,c\par ,b\par ,a\par 
b\par ,c\par ,a\par 
b\par ,c\par ,a\par 
============================================================
