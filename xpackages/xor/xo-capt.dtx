% \iffalse
%% File xo-capt.dtx (C) Copyright 1999-2000 Frank Mittelbach, David Carlisle, Chris Rowley
%%                  (C) Copyright 2004-2007 Frank Mittelbach, LaTeX3 Project
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% This file is part of the ``xor bundle'' (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%%
%% The released version of this bundle is available from CTAN.
%%
%% -----------------------------------------------------------------------
%%
%% The development version of the bundle can be found at
%%
%%    http://www.latex-project.org/svnroot/experimental/trunk/
%%
%% for those people who are interested.
%%
%%%%%%%%%%%
%% NOTE: %%
%%%%%%%%%%%
%%
%%   Snapshots taken from the repository represent work in progress and may
%%   not work or may contain conflicting material!  We therefore ask
%%   people _not_ to put them into distributions, archives, etc. without
%%   prior consultation with the LaTeX Project Team.
%%
%% -----------------------------------------------------------------------
%%
\RequirePackage{l3names}
\GetIdInfo $Id$
          {xo-capt (part of xor)}
\ProvidesExplPackage{\filename}
  {\filedate}{\fileversion}{\filedescription}
% \fi
%
%
% \subsection{Modifying the caption command}
%
% \begin{macro}{\@caption}
% |\caption| just saves its main argument in a token register. It also
% has |\unskip| and |\ignorespaces| to cope with hmode.
% The format of the token register is:\\
% \marg{type}\marg{number}\marg{caption text}\marg{extra info}\\
% The \meta{type} is something like `figure', used to generate the
% relevant command names. \meta{number} is the fully expanded version of
% |\the|\ldots. The last group is unused by the current definition
% but extended packages may use it to pass extra information to the
% float handler, as required.
%    \begin{macrocode}
\def\caption{\@dblarg{\@caption\l_xor_curr_float_type_tlp}}

\long\def\@caption#1[#2]#3{%
  \unskip
%    \end{macrocode}
%    We use the old \LaTeX{} interface with |\addcontentsline| for the
%    moment.\footnote{FIX!!}
%    \begin{macrocode}
  \addcontentsline{\csname g_xor_type_ #1  _extension_tlp\endcsname}{#1}
%    \end{macrocode}
%    The counter used is not |#1| but given by (|\foat@counter|) which
%    should perhaps be passed along but isn't:
%    \begin{macrocode}
    {\protect\numberline{\csname the\float@counter\endcsname}
    {\ignorespaces #2}}
  \global\toks \g_xor_curr_float_box_tlp {#3}
  \ignorespaces
  }
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Adding captions to float boxes}
%
% \begin{macro}{\g_xor_this_captioned_float_box}
%    \begin{macrocode}
\box_new:N\g_xor_this_captioned_float_box
%    \end{macrocode}
% \end{macro}
%
% This should really be a template instance.
% Must \emph{copy} the float body in |\g_xor_this_float_box_tlp|
% into |\g_xor_this_captioned_float_box| adding the caption text.
% May use |\g_xor_this_area_name_tlp|, |\g_xor_this_area_col_tlp| and other information, to be
% determined \ldots
%
% \begin{macro}{\xor_append_caption_to_float:}
%    Combine float body and caption of the current float (``this
%    float'') and store it in |\g_xor_this_captioned_float_box|.
%
% This should really be a template instance.
%
% May use |\g_xor_this_area_name_tlp|, |\g_xor_this_area_col_tlp| and other information,
% to be determined \ldots even |\this@caption@action|.
%
%    \begin{macrocode}
\def_new:Npn \xor_append_caption_to_float:{
  \xor_typeset_some_floatbox:nnnnnnn
      \g_xor_this_type_tlp
      \g_xor_this_area_name_tlp
      \g_xor_this_float_box_tlp 
      {\csname  g_xor_type_
                 \g_xor_this_type_tlp
                _caption_tlp  \endcsname}
      \g_xor_this_display_cnt_tlp
      \g_xor_this_caption_tlp
      \g_xor_this_span_num_tlp
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\xor_append_here_caption_to_float:}
%    Combine float body and caption of the current here float and
%    store it in |\g_xor_this_captioned_float_box|.
%    \begin{macrocode}
\def_new:Npn \xor_append_here_caption_to_float:{
  \xor_typeset_some_floatbox:nnnnnnn
      \g_xor_here_type_tlp
      {h \int_use:N\g_xor_curr_col_int 1}
      \g_xor_here_float_box_tlp
      {\csname  g_xor_type_
                 \g_xor_here_type_tlp
                _caption_tlp  \endcsname}
      \g_xor_here_display_cnt_tlp
      \g_xor_here_caption_tlp
      \g_xor_here_span_num_tlp
}
%    \end{macrocode}
% \end{macro}
%
%
%
% \begin{macro}{\xor_typeset_this_float_and_caption:}
%    Combine float body and caption of the current float (``this
%    float'') and output it into the current list.
%    \begin{macrocode}
\def_new:Npn \xor_typeset_this_float_and_caption:{
  \xor_append_caption_to_float:
  \box_use_clear:N\g_xor_this_captioned_float_box
}
%    \end{macrocode}
% \end{macro}
%
%
%
% \section{Some primitive templates for testing}
%
% prove of concept only --- not even prototype
%
%
% \begin{macro}{\xor_typeset_some_floatbox:nnnnnnn}
%    The macro |\xor_typeset_some_floatbox:nnnnnnn| take 7 arguments as follows:
%    \begin{description}
%    \item[type] type of the float to be typeset
%    \item[area] area in which to format the float
%    \item[floatbody box] box register in which the body of the float
%       is stored
%    \item[caption heading] fixed text like ``Figure''
%    \item[caption number] caption number of the float
%    \item[caption text] caption text of the float
%    \item[span count] span count (normally deducable from the area
%    but\ldots
%    \end{description}
%    The first two arguments are used to decide which formatting
%    instance to call, the remaining arguments are passed to that
%    instance.
%
%    The logic is (at the moment) as follows: if a template instance
%    (type \texttt{buildfloat}) with the name
%    \meta{type}|-|\meta{area}\footnote{The ``here'' areas are
%    denoted as \texttt{h}\meta{col}\texttt{1}.}
%    is defined then this instance is used,
%    otherwise we look if there is an instance with just the name of
%    the \meta{area}, otherwise we try an instance with the name
%    \meta{type} and if this isn't defined either we try the instance
%    named |default|.
%    \begin{macrocode}
\def_new:Npn \xor_typeset_some_floatbox:nnnnnnn #1#2 { % type area

  \IfExistsInstanceTF{buildfloat}
                     { #1 - #2 }
    {\def\use@instance@named{#1 - #2}}
    {
      \IfExistsInstanceTF{buildfloat}
                         { #2 }
        {\def\use@instance@named{#2}}
        {
        \IfExistsInstanceTF{buildfloat}
                           { #1 }
          {\let\use@instance@named#1 }   % we know this is a token
          {\def\use@instance@named{default}}
        }
    }
  \UseInstance{buildfloat}\use@instance@named
}
%    \end{macrocode}
% \end{macro}
%
%
%
%    \begin{macrocode}
% #1 body box
% #2 fixed text
% #3 counter value
% #4 caption
% #5 span number
\DeclareTemplateType{buildfloat}{5}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareTemplate{buildfloat}{centeredabove}{5}
 {
   body-caption-sep =l [10pt] \belowcaptionskip,
 }
 {
  \DoParameterAssignments
%    \end{macrocode}
%    When typesetting the caption we need full control over the environment as
%    this may be called at arbitrary times when the output routine gets
%    control. Initially I missed out the font reset with the result that some
%    captions suddenly showed up with typewriter fonts.
%    \begin{macrocode}
  \reset@font
  \normalsize
  \@parboxrestore

  \hsize=#5\columnwidth

  \vbox_gset:Nn \g_xor_this_captioned_float_box
    {
     \sbox\l_tmpb_box{#2~ #3:~ #4}
     \dim_compare:nNnTF {\box_wd:N \l_tmpb_box} >\hsize
     { #2~ #3:~ #4\par }
     { \hbox_to_wd:nn \hsize {\hfil\box_use_clear:N\l_tmpb_box\hfil} }
     \vskip\belowcaptionskip
     \centerline{ \box_use:N#1 }
     \kern\c_zero_skip
    }
 }
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareTemplate{buildfloat}{centeredbelow}{5}
 {
   body-caption-sep =l [10pt] \abovecaptionskip,
 }
 {
  \DoParameterAssignments

  \@parboxrestore

  \hsize=#5\columnwidth

  \vbox_gset:Nn \g_xor_this_captioned_float_box
    {
      \centerline{\box_use:N#1}
      \vskip\abovecaptionskip
      \sbox\l_tmpb_box{#2~ #3:~ #4}
      \dim_compare:nNnTF {\box_wd:N \l_tmpb_box} >\hsize
      { #2~ #3:~ #4\par }
      { \hbox_to_wd:nn \hsize {\hfil\box_use_clear:N\l_tmpb_box \hfil} }
    }
 }
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareTemplate{buildfloat}{bottomright}{5}
 {
   body-caption-sep =l [10pt] \abovecaptionskip,
 }
 {
  \DoParameterAssignments

  \@parboxrestore

  \hsize=#5\columnwidth

  \vbox_gset:Nn \g_xor_this_captioned_float_box
    {
     \@@line{\hss\vbox{\box_use:N#1\kern0pt}
       \rlap{
   \hskip\abovecaptionskip
%    \end{macrocode}
%    rubbish as far as it goes: this should be turned into a real
%    template probably using coffins
%    \begin{macrocode}
        \parbox[b]{\marginparwidth
                   +(#5\columnwidth-\box_wd:N#1)/2}{
           \raggedright
           #2~ #3:~ #4
        }
      }\hss
    }
    \kern0pt
  }
 }
%    \end{macrocode}
%
%
%
% \subsection{Some test instances}
%
%    \begin{macrocode}
\DeclareInstance{buildfloat}{default}{centeredabove}{}

\DeclareInstance{buildfloat}{figure}{centeredbelow}{}

\DeclareInstance{buildfloat}{t31}{bottomright}{}
\DeclareInstance{buildfloat}{t22}{bottomright}{}
\DeclareInstance{buildfloat}{t13}{bottomright}{}
%    \end{macrocode}
%
% \endinput
\endinput
%
% $Log$
% Revision 1.10  2005/03/01 22:52:32  morten
% Small updates, more expl3 conversion
%
% Revision 1.8  2004/12/04 22:54:08  mittelba
% starting to define a box module ... unfinished and names not yet right!
%
% Revision 1.7  2004/11/13 10:04:06  mittelba
% new license (LPPL)
%
% Revision 1.6  2004/10/30 18:45:43  mittelba
% further cleanup using expl3 concepts
% first attempt at balancing (unfinished)
%
% Revision 1.5  2004/10/12 21:40:26  mittelba
% updates up to p29
%
% Revision 1.4  2004/10/03 15:35:43  mittelba
% more cleanup ... tedious ...
%
% Revision 1.3  2004/10/01 21:46:23  mittelba
% many further updates, still a lot to do
%
% Revision 1.2  2004/09/27 20:05:51  mittelba
% in the middle of normalizing to expl3 syntax
%
% Revision 1.1  2001/07/26 19:55:12  latex3
% original web distrib
%
% Revision 1.13  2000/08/11 07:14:03  latex3
% added header
%
% Revision 1.12  2000/08/11 06:47:53  latex3
% untabify
%
% Revision 1.11  2000/07/19 15:55:53  latex3
% used \l_xor_curr_float_type_tlp rather than \@captype
% extended buildfloat template to 5 arguments
%
% Revision 1.10  2000/07/10 18:45:23  latex3
% some normalisation of caption attachment code -- needs more work
%
% Revision 1.9  2000/06/13 20:53:55  latex3
% docu update
% renamed template type builtfloat to buildfloat
%
% Revision 1.8  2000/05/03 20:16:59  latex3
% added more arguments to the caption template
%
% Revision 1.7  2000/05/03 20:03:59  latex3
% fixed typo in macro name
%
% Revision 1.6  2000/05/03 18:52:44  latex3
% enabling write of toc entries
% adding a prove of concept for caption templates
%
