% \iffalse
%%
%% (C) Copyright 1999-2000 Frank Mittelbach, David Carlisle, Chris Rowley
%% All rights reserved.
%%
%% Not for general distribution. In its present form it is not allowed
%% to put this package onto CD or an archive without consulting the
%% the authors.
%% 
% \fi
%
%
%    \begin{macrocode}
\def\@tempa#1: #2.dtx,v #3 #4 #5 #6 #7${
  \ProvidesPackage{#2}[#4 #3 #5 #6]}
\@tempa$Id$
%    \end{macrocode}
%
%    \begin{macrocode}
\IgnoreWhiteSpace
%    \end{macrocode}
%
%    Update: as of April 3 this now does something reasonable with
%    top and bottom floats.  The text in between still needs lots of
%    attention.  No headers/footers/margins/overlays etc etc yet.
%
%    There is still a lot of inefficient indirection; this shows where we
%    may be able to support more general page-makeup systems.
%
%    And not much tracing yet.
%
%    \subsection{Text columns}
%    
% \begin{macro}{\produce@final@column}
% \begin{macro}{\final@column@with@floats}
% \begin{macro}{\final@column}
%
% This version puts column floats in columns; see below for
% an alternative.  It simulates current \LaTeX{} so should not be
% taken as a model for anything useful.
%
% When we remove or modernise this a lot more code from below can go
% too. 
% 
%    \begin{macrocode}
\def\final@column@with@floats {
%<*trace>
  \@tracepush{produce@final@column}
%</trace>
   \box_set_eq:NN \@outputbox \@cclv

   \add@floats@top:c
      {g_xor_area_ t1\int_use:N\g_xor_curr_col_int _seq}

   \ifvoid\footins
   \else
     \setbox\@outputbox \vbox {
       \dim_set:Nn \boxmaxdepth \@maxdepth
       \dim_set:Nn \l_tmpa_dim {\dp\@outputbox}
       \unvbox \@outputbox
       \vskip-\l_tmpa_dim
       \vskip \skip\footins
       \color@begingroup
         \normalcolor
         \footnoterule
         \unvbox \footins
       \color@endgroup
      }
   \fi

   \expandafter
   \add@floats@bottom:c 
      {g_xor_area_ b1\int_use:N\g_xor_curr_col_int _seq}

   \global\setbox\csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname
          % \vbox { % this should one day become \@colht
          \vbox { % this should one day become \@colht
                                % or else
           \@texttop
           \dim_set:Nn \l_tmpa_dim {\dp\@outputbox}
           \unvbox \@outputbox
           \vskip -\l_tmpa_dim
           \@textbottom
           }%
   \global \maxdepth \@maxdepth
%<*trace>
  \@tracepop{produce@final@column}
%</trace>
}
%    \end{macrocode}
%   This version does not give special treatment to column floats; it
%   simply attachs footnotes and tops/tails.
%
%   Probably this should just stuff the main text and footnotes into
%   boxes (or a box?) with no extra formatting; all aesthetic handling would
%   be done later, when the page is being made-up.  
%
%   The formatting details are clearly temporary.
%   
%    \begin{macrocode}
\def\final@column {
%<*trace>
  \@tracepush{produce@final@column}
%</trace>
   \box_set_eq:NN \@outputbox \@cclv

   \ifvoid\footins
   \else
     \setbox\@outputbox \vbox {
       \boxmaxdepth \@maxdepth
%    \end{macrocode}
% \TeX\ calculates page breaks expecting the depth of the main text
% to extend below the page baseline, not contributing to the page height,
% and it assumes the entire height plus depth of footnotes will contribute
% to the page height.  When the page is assembled, the footnote depth 
% is below the baseline and the main text depth appears mid-page.  To
% make the contents fit the page precisely, we (locally) adjust the 
% footnote spacing \cs{skip}\cs{footins} by the \emph{difference} in
% the two depths.\footnote{This part of the code was suggested by
%    Donald Arseneau in bug report pr3189.}
%    \begin{macrocode}
       \skip_sub:Nn {\skip\footins} {\dp\@outputbox} % already limited to \@maxdepth
       \unvbox \@outputbox
       \ifdim\dp\footins>\@maxdepth
          \skip_add:Nn {\skip\footins}\@maxdepth
       \else:
          \skip_add:Nn {\skip\footins}{\dp\footins}
       \fi:
       \vskip \skip\footins
%    \end{macrocode}
%    If we are doing grid typesetting we put all excess space between
%    the text and the footnote(s).
%    \begin{macrocode}
       \ifdim \pagesetup@grid@point@sep > \z@
         \vfil
       \fi
       \color@begingroup
         \normalcolor
         \footnoterule
         \unvbox \footins
       \color@endgroup
      }
   \fi
%    \end{macrocode}
%
%   I am not sure if texttop/bottom should survive for long: something
%   more spohisictaed is needed these days.  This may mean that
%   footnotes need better handling too: what makes a complex column
%   look good?
%
%    \begin{macrocode}
   \global\setbox\csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname
          \vbox to \csname g_xor_ht_col_ \int_use:N\g_xor_curr_col_int _dim\endcsname %<-----
          { % this should one day become \@colht
                                % or else
           \@texttop


%%% tmp for balancing trials ... this is in the wrong place!

        \expandafter \l_tmpa_dim \expandafter \dp \csname g_xor_col_
                      \int_use:N \g_xor_curr_col_int
                      _balance_
%                     \num_use:N \g_xor_trial_balance_seen_num 
                      _box 
               \endcsname
        \expandafter \box \csname g_xor_col_
                      \int_use:N \g_xor_curr_col_int
                      _balance_
%                     \num_use:N \g_xor_trial_balance_seen_num 
                      _box 
               \endcsname
        \vskip -\l_tmpa_dim
\hrule\kern-0.4pt

%%% tmp for balancing trials ... this is in the wrong place!

           \dim_set:Nn \l_tmpa_dim {\dp\@outputbox}
           \unvbox \@outputbox
           \vskip -\l_tmpa_dim
           \@textbottom
           }%
   \global \maxdepth \@maxdepth
%<*trace>
  \@tracepop{produce@final@column}
%</trace>
}

% this is the version we are currently using!
\let \produce@final@column \final@column
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\add@floats@top:N}
% \begin{macro}{\add@floats@bottom:N}
%  These are now used (if at all)
%  only within columns (maybe not best even there).
%  
%    \begin{macrocode}
\def\add@floats@top:c {\exp_args:Nc\add@floats@top:N}

\def\add@floats@top:N #1{
  \seq_if_empty:NF #1
   {
    \setbox\l_tmpa_box  \vbox{}
    \seq_map:NN #1 \@comflelt
    \setbox\@outputbox \vbox{
                             \boxmaxdepth \maxdepth
                             \unvbox\l_tmpa_box 
                             \vskip -\g_xor_float_float_skip
                             \topfigrule
                             \vskip \g_xor_float_text_skip
                             \unvbox\@outputbox
                             }
    \release@floats:N #1
  }
}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\add@floats@bottom#1{
  \seq_if_empty:NF #1
   {
    \setbox\l_tmpa_box  \vbox{}
    \seq_map:NN #1 \@comflelt
    \setbox\@outputbox \vbox{
                             \unvbox\@outputbox
                             \vskip \g_xor_float_text_skip
                             \botfigrule
                             \unvbox\l_tmpa_box 
                             \vskip -\g_xor_float_float_skip
                             }
    \release@floats:N #1
   }
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%
%
%    \subsection{Shipout and housekeeping}
%
%
% \begin{macro}{\g_xor_page_absolute_num}
%    \begin{macrocode}
\num_new:N \g_xor_page_absolute_num
%    \end{macrocode}
% \end{macro}
% 
%    \begin{macrocode}

%    \end{macrocode}
%    
% \begin{macro}{\produce@final@page}
% 
%    This puts everything to be shipped out into the hbox
%    |\page@box| and then ships this out (not quite, see below!).
%
%    Probably these two processes should be separated.
%    
%    At present it does the page-makeup within the shipped out box;
%    this should proably be done earlier.
%
%    Should the box (or the box-name) be a global
%    fixed object (bad;-) or a local parameter (good;-)?
%    
%    The shipping out is surrounded by considerable housekeeping:
%    this version sets up to do the writes and fixes the
%    numbering.
%
%    \begin{macrocode}
\def\produce@final@page{
%<*trace>
  \@tracepush{produce@final@page}
  \tr@ce{final~ page~ output:~ Chris'~ version}
%</trace>
  \begingroup           % the \endgroup is put in by \aftergroup
%    \end{macrocode}
%    
%    \begin{macrocode}
    \@resetactivechars
    \@parboxrestore
    \let \protect \noexpand
%    \end{macrocode}%    
%    Temp: just puts stuff into lists (which could have been built up
%    as floats are placed?).
%    \begin{macrocode}
    \do@floats  
    \shipout \hbox {        % NOTE: an hbox now!  
%    \end{macrocode}
%    
%    \begin{macrocode}
      \set@typeset@protect
      \aftergroup \endgroup
      \aftergroup \set@typeset@protect
%    \end{macrocode}
%    Making the box can be done outside the shipout.
%    \begin{macrocode}
       \make@page@box
       \box \page@box
    }
% \endgroup  %% This is _implicitly_ here.
%    \end{macrocode}
%    
%    \begin{macrocode}
  \int_gincr:N \c@page
  \num_gincr:N \g_xor_page_absolute_num
%<*trace>
  \tr@ce{absolute~page:~\num_use:N \g_xor_page_absolute_num}
  \@tracepop{produce@final@page}
%</trace>
}

%    \end{macrocode}
% \end{macro}
%
%    \subsection{The page box}
%    
% \begin{macro}{\mbox@addtopage}
% \begin{macro}{\box@addtopage}
% \begin{macro}{\page@box}
%  This should be generalised to add a box to any box (without overcrowding).
%    \begin{macrocode}
\box_new:N \page@box
\def\mbox@addtopage (#1,#2)#3{%
%<*trace>
  \tr@ce{box~being~added~to~page:~at~(#1,~#2)
        }
%</trace>
  \global \setbox\page@box
    \hbox {
      \unhbox \page@box
      \mbox@put  (#1,#2) {#3}
    }
}
\def\box@addtopage (#1,#2)#3{%
  \mbox@addtopage (#1,#2){\box #3}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
%
% \begin{macro}{\make@page@box}
%
% This adds stuff to a globallly named box; maybe it should be more
% generic.
% 
% This is some kind of default example.
% It should be templated. 
% 
%    \begin{macrocode}
\def \make@page@box {
%<*trace>
  \@tracepush{make@page@box}
  \tr@ce{new style page nake-up}
%</trace>
%    \end{macrocode}
%    Temp for current header:
%    \begin{macrocode}
    \mbox@addtopage (\pagebodylefthpos, \headheight)
       {page:~\thepage}
%    \end{macrocode}
%    Then add the float areas, using a list of boxes and positions.
%    Probably, the whole thing should be done this way but this may
%    not be sensible for simple cases.
%
%    Also, some alignments (eg text) may be better handled by the
%    use of coffins (which are a very similar, but more complex,
%    technology).
%
%    First set-up starting point for main text body.
%    \begin{macrocode}
  \xor_forall_columns:n {
    \expandafter \xdef
      \csname stack@level@\int_use:N\g_xor_curr_col_int \endcsname
        {\pagebodytopvpos}
  }
  \stack@top@areas
  \add@columns
  \stack@bot@areas
%<*trace>
  \@tracepop{make@page@box}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
%    
%    \subsection{The page box: text columns}
%
%    This needs to be a lot more sophisticated in order to make these
%    look anything but dreadful.
%    
% \begin{macro}{\add@columns}
% \begin{macro}{\add@columns@topstacked}
% \begin{macro}{\add@columns@botaligned}
% 
%    Several possibilities here: choose one.
% 
%    One way to do bottom-aligned columns (probably will not
%    generalise well):
%    \begin{macrocode}
\def \add@columns@botaligned {
%<*trace>
  \@tracepush{add@columns@botaligned}
%</trace>
  \setlength \l_tmpa_dim {\pagebodylefthpos} 
  \xor_forall_columns:n {
%<*trace>
  \tr@ce{bot~aligned~column~\int_use:N\g_xor_curr_col_int :~%
             ht=\expandafter\the\expandafter\ht
                \csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname,~
             dp=\expandafter\the\expandafter\dp
                \csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname}
%</trace>
%    \end{macrocode}
%    Rules will need to be handled separately: where do they go in
%    general with spanning floats?
%    \begin{macrocode}
%          \vrule
    \box@addtopage ( \l_tmpa_dim, \pagebodybotvpos )
          {\csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box\endcsname}
        \setlength \l_tmpa_dim {\l_tmpa_dim + \columnwidth + \columnsep} 
%          \vrule
  }
%<*trace>
  \@tracepop{add@columns@botaligned}
%</trace>
}
%    \end{macrocode}
%
%    Stacking them at the top: this must be dome immediately after
%    stacking the top areas.  They are aligned, if possible, at the
%    top (the actual top, not necessarily the top text line).
%    
%    \begin{macrocode}
\def \add@columns@topstacked {
%<*trace>
  \@tracepush{add@columns@topstacked}
%</trace>
  \gsetmlength \cuur@col@pos {\pagebodylefthpos} 
  \xor_forall_columns:n {
%<*trace>
  \tr@ce{top~stacked~column~\int_use:N\g_xor_curr_col_int :~%
             ht=\expandafter\the\expandafter\ht
                \csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname,~
             dp=\expandafter\the\expandafter\dp
                \csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname}
  \tr@ce{vsize~for~column~\int_use:N\g_xor_curr_col_int~was:~%
                \dim_use:c {g_xor_ht_col_ \int_use:N\g_xor_curr_col_int _dim}}
  \tr@ce{lowered~column~\int_use:N\g_xor_curr_col_int~:~%
                      \csname stack@level@\int_use:N\g_xor_curr_col_int \endcsname
                      }
%</trace>
  \gsetmlength@c {stack@level@\int_use:N\g_xor_curr_col_int}
    { \csname stack@level@\int_use:N\g_xor_curr_col_int \endcsname
      + \expandafter
        \ht \csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname
    }
%    \end{macrocode}
%    Vertical rules will need to be handled differentlyy:
%    where do they go in general with spanning floats?
%    \begin{macrocode}
%          \vrule
    \box@addtopage (  \cuur@col@pos,
                     \csname stack@level@\int_use:N\g_xor_curr_col_int \endcsname )
          {\csname g_xor_col_ \int_use:N\g_xor_curr_col_int _box \endcsname}
        \gsetmlength  \cuur@col@pos { \cuur@col@pos + \columnwidth + \columnsep} 
%          \vrule
    }
%<*trace>
  \@tracepop{add@columns@topstacked}
%</trace>
}
\let \add@columns \add@columns@topstacked
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% 
%    \subsection{The page box: float areas}
%    
% \begin{macro}{\t@stack@area}
% \begin{macro}{\b@stack@area}
%
%  The 4th argument must be a procedure that fills a box whose number
%  is its last argument.  This rather bizarre code merely avoids
%  a box-register-per-area.
%
%    \begin{macrocode}
\def\t@stack@area #1#2#3#4{
%<*trace>
  \@tracepush{t@stack@area}
%</trace>
  #4 \l_tmpa_box 
%    \end{macrocode}
%    First update stacking position for these columns.
%    \begin{macrocode}
 \int_set:Nn \l_tmpa_int {#2} 
 \int_set:Nn \l_tmpb_int {#3}
  \setlength \l_tmpb_dim {\ht\l_tmpa_box  + \dp\l_tmpa_box }
  \loop
    \dim_set:Nc \l_tmpa_dim {stack@level@ \int_use:N \l_tmpb_int}
    \dim_add:Nn \l_tmpa_dim \l_tmpb_dim
    \expandafter
    \xdef \csname stack@level@\int_use:N \l_tmpb_int \endcsname 
      { \dim_use:N \l_tmpa_dim }
  \int_incr:N \l_tmpb_int
  \int_decr:N \l_tmpa_int
  \ifnum \l_tmpa_int  > \z@
  \repeat
%    \end{macrocode}
% Calculate horizontal displacement.
%    \begin{macrocode}
  \setlength \l_tmpa_dim
    {\pagebodylefthpos - \columndisplacement + \columndisplacement * #3}
%    \end{macrocode}
% Add box.
%    \begin{macrocode}
%<*trace>
  \tr@ce{float~area~box~#1#2#3~~lowered~:~%
                      \csname stack@level@#3 \endcsname
                      }
%</trace>
  \box@addtopage (\l_tmpa_dim,\csname stack@level@#3\endcsname)
                 \l_tmpa_box 
%<*trace>
  \@tracepop{t@stack@area}
%</trace>
}
%    \end{macrocode}
%    Different order for co-stacking.
%    \begin{macrocode}
\def\b@stack@area #1#2#3#4{
%<*trace>
  \@tracepush{b@stack@area}
%</trace>
  #4 \l_tmpa_box 
%    \end{macrocode}
% Calculate horizontal displacement.
%    \begin{macrocode}
  \setlength \l_tmpa_dim
    {\pagebodylefthpos - \columndisplacement + \columndisplacement * #3}
%    \end{macrocode}
% Add box.
%    \begin{macrocode}
  \box@addtopage (\l_tmpa_dim,\csname stack@level@#3\endcsname)
                 \l_tmpa_box 
%    \end{macrocode}
%    Then update stacking position for these columns.
%    \begin{macrocode}
 \int_set:Nn \l_tmpa_int {#2}
 \int_set:Nn \l_tmpb_int {#3}
  \setlength \l_tmpb_dim {\ht\l_tmpa_box  + \dp\l_tmpa_box }
  \loop
    \dim_set:Nc \l_tmpa_dim {stack@level@ \int_use:N \l_tmpb_int }
    \dim_sub:Nn \l_tmpa_dim \l_tmpb_dim
    \expandafter
    \xdef \csname stack@level@ \int_use:N \l_tmpb_int \endcsname 
      { \dim_use:N \l_tmpa_dim }
  \int_incr:N \l_tmpb_int
  \int_decr:N \l_tmpa_int
  \ifnum \l_tmpa_int > \c_one
  \repeat
%<*trace>
  \@tracepop{b@stack@area}
%</trace>
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\stack@top@areas}
% \begin{macro}{\stack@bot@areas}
%
% Use of these is all a bit ad hoc for a particular stacking system.
%
%    \begin{macrocode}
\def \stack@bot@areas {
  \stack@areas@list b \pagebodybotvpos \pagebox@list@b
}
\def \stack@top@areas {
  \stack@areas@list t \pagebodytopvpos \pagebox@list@t
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\stack@areas@list}
% 
%    |#1| : stacking type (t, b or c at present)\\
%    |#2| : starting position\\
%    |#3| : list name
%    
%    \begin{macrocode}
\def \stack@areas@list #1#2#3 {
%<*trace>
  \@tracepush{stack@areas@list}
%</trace>
  \ifx #3 \@empty
  \else
    \xor_forall_columns:n {
%    \end{macrocode}
%    Starting point:
%    \begin{macrocode}
%          \vrule
    \expandafter \xdef
      \csname stack@level@\int_use:N\g_xor_curr_col_int \endcsname
        {#2}
    }
%    \end{macrocode}
%    Stacking or co-stacking: bottom-up or top-down.
%    \begin{macrocode}
  \expandafter
  \let \expandafter
      \p@elt \csname #1@stack@area \endcsname
        #3
  \fi
%<*trace>
  \@tracepop{stack@areas@list}
%</trace>
}
%    \end{macrocode}
% \end{macro}
%
% 
% \begin{macro}{\make@area@floats@box}
%
% Format all the floats in a list and store the result in a box register.
% This should be templated.
%
% This could do the file-writing too.
% 
%    |#1| : area-name\\
%    |#2| : box to be filled
%    
%    \begin{macrocode}
\def\make@area@floats@box #1#2 {
%<*trace>
  \@tracepush{make@area@floats@box}
  \tr@ce{Area:~ #1}
%</trace>
  \@ifundefined{g_xor_area_#1_seq}   % test only needed because of missing integration
     {
%<*trace>
      \tr@ce{Area:~ not~ set~ up}
%</trace>
     }
     {
  \xor_this_area_setup:o{#1} % needed below when typesetting floats

  \box_set_eq:NN #2 \voidb@x                % <-------- FMi
%    \end{macrocode}
%    Not very pretty yet!  But better when decoration
%    stuff is used.
%    \begin{macrocode}
  \seq_map_inline:cn {g_xor_area_#1_seq}
                     { \typeset@float@in@box {#2} ##1 }

  \release@floats:c {g_xor_area_#1_seq}
     }
%<*trace>
  \@tracepop{make@area@floats@box}
%</trace>
}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{DECORATIONS}
%  Not used at present but something like this is probably needed.
%  
%    \begin{macrocode}
    
\def \box@decorate@bot #1 {
    \setbox #1 \vbox{
                             \vskip \g_xor_float_text_skip
                             \botfigrule
                             \unvbox #1
                             \vskip -\g_xor_float_float_skip
    }
}
\def \box@decorate@top #1 {
    \setbox #1 \vbox{
                             \unvbox #1
                             \vskip -\g_xor_float_float_skip
                             \topfigrule
                             \vskip \g_xor_float_text_skip
    }
}


%    \end{macrocode}
% \end{macro}
%
%    
%    \subsection{The page box: margins}
%
%    Needed?
% 
%    \subsection{The page box: headers and footers}
%
%    Nothing worth puting here yet.
%    
%    \subsection{The page box: other}
%
%    Maybe should be many subsections: eg overlays.
%    
% \subsection{Typesetting captions and float boxes}
%
% All more or less temporary.
% 
% \begin{macro}{\@comflelt}
% \begin{macro}{\typeset@float@in@box}
% 
% Maybe a bad name but this is probably as generic as it can be at
% present (and one would hate to see the name's demise).
% 
%    \begin{macrocode}
\def\@comflelt #1 {
  \tlp_gset_eq:NN \g_xor_this_float_box_tlp #1
  \xor_extract_this_float_core_values:N  #1
  \setbox\l_tmpa_box  \vbox {
    \unvbox\l_tmpa_box 
    \typeset@this@float@and@caption
    }
  }
%    \end{macrocode}
%
%    Thus sadly we maybe should move to this, avoiding the use of a
%    global variable for parameter passing.
%    
%    \begin{macrocode}
\def\typeset@float@in@box #1 #2 {
%<*trace>
  \@tracepush{typeset@float@in@box}
%</trace>
  \tlp_gset:Nn \g_xor_this_float_box_tlp {#2}         % <------------- FMi

  \xor_extract_this_float_core_values:N #2

  \xor_update_this_area_span_cols:n
     {
      \num_gdecr:c
         {g_xor_ \g_xor_this_area_type_tlp
          _floats_col_ \int_use:N \l_xor_update_col_int _num}
%<*trace>
       \tr@ce{g_xor_ \g_xor_this_area_type_tlp
              _floats_col_ \int_use:N \l_xor_update_col_int _num~ <-~
              \num_use:c {g_xor_ \g_xor_this_area_type_tlp
                          _floats_col_ \int_use:N \l_xor_update_col_int _num}
         }
%</trace>
     }

  \setbox #1 \vbox {
    \ifvoid #1 
%<*trace>
\tr@ce{add~to~#1:~float~ #2}
%</trace>
    \else       % experimental FMi
%<*trace>
\tr@ce{add~to~#1:~float~ #2~ plus~ \g_xor_float_float_skip}
%</trace>
      \unvbox #1                            % experimental FMi
      \vskip \g_xor_float_float_skip     % experimental FMi
    \fi                                     % experimental FMi
    \typeset@this@float@and@caption
    }
%<*trace>
  \@tracepop{typeset@float@in@box}
%</trace>
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
%    
%
%    \subsection{Page box lists}
%    
% \begin{macro}{\pagebox@area}
% \begin{macro}{\@addto@pagebox@list}
%
%  Bad names?
% 
%  Add the float areas to a page-box list, and specify how to
%  process them.  This should be templated. The columns could be added
%  to this list.
%
%  The 2nd argument must at present be a procedure that has two
%  arguments and it is expected to fill a box whose number
%  is its last argument.  This rather bizarre code merely avoids
%  a box-register-per-area.
%
%    |#1| : area-name
%    |#2| : action for each float in area
%    |#3| : area-position
%    
%    \begin{macrocode}
\def\pagebox@area #1#2#3 {
%<*trace>
  \@tracepush {pagebox@area}
%</trace>
  \seq_set_eq:Nc
    \g_xor_this_area_seq {g_xor_area_#1_seq}
%<*trace>
  \tr@ce{adding~ floats~ (if any)~ #1~  ==~ `\g_xor_this_area_seq'~
         to~page~list:~#3 }
%</trace>
  \seq_if_empty:NF \g_xor_this_area_seq 
    {
     \let \p@elt \relax    
     \@addto@pagebox@list {#3}
         { \p@elt #1 { #2 {#1}} }
    }
%<*trace>
  \@tracepop {pagebox@area}
%</trace>
}
%    \end{macrocode}
% Ugh!!  Improve?
%    \begin{macrocode}
\def \@addto@pagebox@list #1#2 {
  \@temptokena \expandafter\expandafter\expandafter
    { \csname pagebox@list@#1 \endcsname
      #2
    }
 \expandafter
  \xdef
    \csname pagebox@list@#1 \endcsname
      { \toks_use:N \@temptokena }
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
%
%    \subsection{Magic boxes}
%    
% \begin{macro}{\mbox@put}
% \begin{macro}{\box@put}
% \begin{macro}{\copy@put}
%
% Probably move sometime.\footnote{Move?}
% 
% These add boxes with the specified visual relative position
% but all-zero dimensions (unlike picture mode where the inner
% boxes have non-zero vertical size).  A highly generalised lap-box!
% 
% At present these use Don Knuth's left-handed DVI co-ordinate
% system.  They could (should?) be changed to a saner system as used
% by \LaTeX{}, Postscript and the rest of the known civilised world
% since Descartes.
% 
%    \begin{macrocode}
\def\mbox@put (#1,#2)#3{%
  \setbox\l_tmpa_box  \hbox {
%   \raise #2                              % Ugh!  Zany y-direction---
      \lower #2                            %   thanks Don!
        \hbox {\kern#1 #3\hss}
      }
%    \end{macrocode}
% For this application we must zero everything. 
%    \begin{macrocode}
  \wd \l_tmpa_box  \z@
  \ht \l_tmpa_box  \z@
  \dp \l_tmpa_box  \z@
  \box\l_tmpa_box 
  }
%    \end{macrocode}
%    
%    \begin{macrocode}
\def\box@put (#1,#2)#3{%
  \mbox@put (#1,#2) {\box #3}
}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\copy@put (#1,#2)#3{
  \mbox@put (#1,#2) {\copy #3}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Move me!}
% 
% Stuff for elsewhere; maybe to xo-new right now?
% 
% \begin{macro}{\forall@areas}
% Area list stuff\footnote{Probably move.}.
% 
% These should be more generally used/available whatever area lists,
%  however impemnted, we end up with.
%
%  This list manipulation stuff works only for lists whose elements are
%   unexpandable; this could be extended.
%    \begin{macrocode}

\def \forall@areas #1 {
  \clist_map_inline:Nn \g_xor_areas_used_clist
       {\split@area@name@and@exec:NNNn ##1 {#1}}
}


\def\split@area@name@and@exec:NNNn #1#2#3#4 {
  \def \curr@area {#1#2#3}
  \def \curr@pos {#1}
  \def \curr@col {#3}
  \def \curr@span {#2}
  #4
  }

%    \end{macrocode}
% \end{macro}
%
%    
% \begin{macro}{\release@floats:c}
%
%    \begin{macrocode}
\def\release@floats:c{\exp_args:Nc\release@floats:N}
\def\release@floats:N#1{
%   \show #1
   \seq_gconcat:NNN \g_xor_floats_free_seq \g_xor_floats_free_seq #1
   \seq_gclear:N #1
}
%    \end{macrocode}
% \end{macro}
%
% More helper functions (some not yet used)\footnote{To be moved}.
%
%
% Macrised lengths etc.
% 
% \begin{macro}{\setmlength}
% \begin{macro}{\gsetmlength}
%    \begin{macrocode}
\def \gsetmlength #1#2  {
    \setlength \l_tmpa_dim {#2}  
  \xdef #1 {\dim_use:N \l_tmpa_dim}
} 
\def \gsetmlength@c #1#2  {
    \setlength \l_tmpa_dim {#2}
    \expandafter
    \xdef \csname #1\endcsname
      {\dim_use:N \l_tmpa_dim}
}
\def \setmlength #1#2  {
    \setlength \l_tmpa_dim {#2}  
  \edef #1 {\dim_use:N \l_tmpa_dim}
} 
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Really temp stuff}
% 
% \begin{macro}{TEMP@KLUDGES}
% Some very temporary (very bad) examples and kludges:
%    \begin{macrocode}
\def \do@floats {
%<*trace>
  \@tracepush{do@floats}
%</trace>
  \let  \pagebox@list@t \@empty
  \let  \pagebox@list@b \@empty
  \forall@areas {
    \expandafter
    \pagebox@area
      \expandafter
      {\curr@area} \make@area@floats@box  {\curr@pos}
  }
%<*trace>
  \tr@ce{
    pagebox~list:~t~ is~\meaning \pagebox@list@t}
  \tr@ce{
    pagebox~list:~b~ is~\meaning \pagebox@list@t}
  \@tracepop{do@floats}
%</trace>
}

%    \end{macrocode}
%    
%  Temp place for these calcs. They should be part of the page layout
%  set-up.\footnote{Move?}  
%  Temp positioning stuff:
%    \begin{macrocode}
\AtBeginDocument {
%% vert
  \setlength \l_tmpa_dim {\headheight + \headsep}  
  \xdef \pagebodytopvpos {\dim_use:N \l_tmpa_dim}

  \setlength \l_tmpa_dim {\l_tmpa_dim + \textheight}  
  \xdef \pagebodybotvpos {\dim_use:N \l_tmpa_dim}

%% horiz
  \setlength \l_tmpa_dim {\columnwidth + \columnsep}
  \xdef \columndisplacement {\dim_use:N \l_tmpa_dim}

  \def \pagebodylefthpos {\z@}  % or whatever?)

%  \show \pagebodytopvpos
%  \show \pagebodybotvpos
% 
%  \showthe \headheight
%  \showthe \headsep
%  \showthe \textheight
%  \showthe \textwidth
%  \showthe \columnwidth
}

%    \end{macrocode}
%    \end{macro}
%
% \endinput
\endinput
%
% $Log$
% Revision 1.8  2004/10/31 21:48:03  mittelba
% tmp addition for balancing trials
%
% Revision 1.7  2004/10/30 18:45:46  mittelba
% further cleanup using expl3 concepts
% first attempt at balancing (unfinished)
%
% Revision 1.6  2004/10/12 21:40:29  mittelba
% updates up to p29
%
% Revision 1.5  2004/10/03 15:35:46  mittelba
% more cleanup ... tedious ...
%
% Revision 1.4  2004/10/01 21:46:26  mittelba
% many further updates, still a lot to do
%
% Revision 1.3  2004/09/27 20:05:57  mittelba
% in the middle of normalizing to expl3 syntax
%
% Revision 1.2  2004/09/02 15:54:21  mittelba
% moving material from xo-new
% fixing missing area setup in \make@area@floats@box
%
% Revision 1.1  2001/07/26 19:55:12  latex3
% original web distrib
%
% Revision 1.20  2000/08/11 07:14:09  latex3
% added header
%
% Revision 1.19  2000/07/19 15:56:46  latex3
% removed \extract@this@float@actual@structure (is now in xo-or awaiting
% normalisation with similar commands)
%
% Revision 1.18  2000/07/10 18:46:11  latex3
% mainly macro renamings
%
% Revision 1.17  2000/06/16 11:20:40  latex3
% rename \construct@and@test@col@height to \construct@and@test@col@ht
% rename \construct@and@test@col@heights to \construct@and@test@col@hts
% rename \cl@height1 to \@col@ht@1 (etc)
%
% Revision 1.16  2000/06/13 21:17:32  latex3
% move setting of \protect so that it works
%
% Revision 1.15  2000/04/12 20:52:39  car2
% Much tidyng: farewell comflelt!
%
% Revision 1.14  2000/04/06 22:14:00  car2
% added caption setting
%
% Revision 1.13  2000/04/03  12:09:28  car2
% alpha version
%
% Revision 1.12  2000/04/03 10:59:31  car2
% Untidy alpha
%
% Revision 1.11  2000/03/30 21:06:28  car2
% Chris' alpha-minus version
%
% Revision 1.10  2000/03/24 15:34:27  latex3
% version that starts supporting spans (still a hack yet)
%
% Revision 1.9  2000/03/22 15:29:42  latex3
% some normalisations of names
%
% Revision 1.8  2000/03/09 14:44:31  latex3
% *** empty log message ***
%
% Revision 1.7  2000/03/05 19:38:12  latex3
% support multiple columns (6 max right now)
%
% Revision 1.6  2000/02/26 18:25:10  david
% release floats changes
%
% Revision 1.5  2000/02/16  17:34:31  latex3
% bit of extra tracing to find why columns do not align (no good :-)
%
% Revision 1.4  2000/02/16  13:39:47  latex3
% added 3col support
%
% Revision 1.3  2000/02/16  10:19:03  latex3
% better code for adding floats to column (using \g_xor_float_text_skip and friends)
%
% Revision 1.2  2000/02/13  22:28:10  latex3
% moved some stuff from xo-or.sty to this file
%
