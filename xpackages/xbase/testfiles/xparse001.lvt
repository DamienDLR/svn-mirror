%
% Copyright (C) 2009 LaTeX3 Project
% 

\documentclass{minimal}
\input{regression-test}

\RequirePackage{xparse}

\begin{document}
\START
\AUTHOR{Joseph Wright, Frank Mittelbach}
\ExplSyntaxOn

\OMIT
\cs_new:Nn \xparse_show:N {
  \cs_show:N #1
  \cs_if_exist:cT { \token_to_str:N #1 } {
    \cs_show:c { \token_to_str:N #1 }
  }
}
\cs_new:Nn \xparse_show_env:n {
  \cs_show:c { environment_begin_ #1 :w }
  \cs_if_exist:cT { \token_to_str:c { environment_begin_ #1 :w } } {
    \cs_show:c { \token_to_str:c { environment_begin_ #1 :w } }
  }
  \cs_show:c { environment_end_ #1 :w }
  \cs_show:c { environment_end_ #1 _aux:w }
}
\TIMO
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Checking~for~existing~definitons}{
  \OMIT
  \DeclareDocumentCommand \foo { } { }
  \TIMO
  \NewDocumentCommand \foo { } { }
  \OMIT
  \cs_gundefine:N \foo
  \TIMO
  \RenewDocumentCommand \foo { } { }
  \OMIT
  \DeclareDocumentCommand \foo { } { First~definiton }
  \TIMO
  \ProvideDocumentCommand \foo { } { Second~definiton }
  \xparse_show:N \foo
}

\TEST{Commands~with~simple~mandatory~arguments}{
  \DeclareDocumentCommand \foo { m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m } 
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo  
}

\TEST{Command~with~too~many~arguments}{
  \DeclareDocumentCommand \foo { m m m m m m m m m m } { }
  \xparse_show:N \foo
}

\TEST{Commands~with~one~long~mandatory~argument}{
  \DeclareDocumentCommand \foo { +m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m +m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m +m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m +m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m +m } 
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m +m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m +m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m +m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m +m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo  
}

\TEST{Commands~with~one~processed~mandatory~argument}{
  \DeclareDocumentCommand \foo { >{\foo}m } { (#1) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m >{\foo}m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m >{\foo}m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m >{\foo}m } 
    { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m >{\foo}m } 
    { (#1) (#2) (#3) (#4) (#5) (#6)  }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m >{\foo}m }
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m >{\foo}m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m m m m m m m m >{\foo}m } 
    { (#1) (#2) (#3) (#4) (#5) (#6) (#7) (#8) (#9) }
  \xparse_show:N \foo  
}

\TEST{Various~mandatory~combinations}{
  \DeclareDocumentCommand \foo { l m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m l m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { u{end} u{stop!} } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { l l l } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { +l >{\foo}u{end} } { (#1) (#2) }
  \xparse_show:N \foo
}

\TEST{Optional~argument~creation}{
  \DeclareDocumentCommand \foo { s o m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { t+ d() +m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { +t\par O{default} m m m } 
    { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m o m o } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m g o m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { m G{test} s m } { (#1) (#2) (#3) (#4) }
  \xparse_show:N \foo
}

\TEST{Unknown~argument~types}{
  \DeclareDocumentCommand \foo { m m n } { }
  \xparse_show:N \foo
  \DeclareDocumentCommand \foo { a b c } { }
  \xparse_show:N \foo
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Some~valid~expandable~functions}{
  \DeclareExpandableDocumentCommand \foo { m } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +m } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +o +m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { s m } { (#1) (#2) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o s m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
}

\TEST{Not~valid~as~expandable~functions}{
  \DeclareExpandableDocumentCommand \foo { m o } { (#1) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { +m m m } { (#1) (#2) (#3) }
  \xparse_show:N \foo
  \DeclareExpandableDocumentCommand \foo { o +m } { (#1) (#2) }
  \xparse_show:N \foo
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Separating~out~interface~and~implementation}{
  \DeclareDocumentCommandInterface \foo { foo } { m o }
  \xparse_show:N \foo
  \cs_show:c { implementation_foo:w }
  \DeclareDocumentCommandImplementation { foo } 2 { (#1) (#2) }
  \cs_show:c { implementation_foo:w }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Checking~for~existing~environments}{
  \OMIT
  \DeclareDocumentEnvironment { foo } { } { } { }
  \TIMO
  \NewDocumentEnvironment { foo } { } { } { }
  \OMIT
  \cs_gundefine:N \environment_begin_foo:w
  \cs_gundefine:N \foo 
  \TIMO
  \RenewDocumentEnvironment { foo } { } { } { }
  \OMIT
  \DeclareDocumentEnvironment { foo } { } { First } { First }
  \TIMO
  \ProvideDocumentEnvironment { foo } { } { Second } { Second }
  \xparse_show_env:n { foo }
}

\TEST{Valid~environment~declarations}{
  \DeclareDocumentEnvironment { foo } { m m m } 
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { s o m } 
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { s o +m } 
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { u{stop} o m } 
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
  \DeclareDocumentEnvironment { foo } { m o o } 
    { (#1) (#2) (#3) } { (#1) (#2) (#3) }
  \xparse_show_env:n { foo }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 
\OMIT
 \DeclareDocumentEnvironment { bar } {  } {  } {  }
 \DeclareDocumentEnvironment { barI } { m } {  } {  }
 \DeclareDocumentEnvironment { barII } { o m } {  } {  }
 \tl_new:N\l_test_tl
\TIMO


\TEST{environment~ groups:~ show~ "outside"~ and~ 1}{
   \tl_set:Nn \l_test_tl {outside}
   \bar
    \tl_set:Nn \l_test_tl {inside}
   \endbar
   \tl_show:N \l_test_tl  \int_show:N \currentgrouplevel
%%%%%%%%
   \tl_set:Nn \l_test_tl {outside}
   \barI {A}
     \tl_set:Nn \l_test_tl {inside}
   \endbarI
   \tl_show:N \l_test_tl   \int_show:N \currentgrouplevel
%%%%%%%%
   \tl_set:Nn \l_test_tl {outside}
   \barII [B]{C}
     \tl_set:Nn \l_test_tl {inside}
   \endbarII
   \tl_show:N \l_test_tl   \int_show:N \currentgrouplevel
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\OMIT
 \DeclareDocumentEnvironment { bazI } { m } {  } 
     { \tl_set:Nn \l_test_tl{(#1)} \cs_show:N \l_test_tl }
 \DeclareDocumentEnvironment { bazII } { m m } {  } 
     { \tl_set:Nn \l_test_tl{(#1) (#2)}  \cs_show:N \l_test_tl }
 \DeclareDocumentEnvironment { bazIII } { m m m } {  } 
     { \tl_set:Nn \l_test_tl{(#1) (#2) (#3)} \cs_show:N \l_test_tl }
 \DeclareDocumentEnvironment { bazIIIa } { o o o } {  } 
     { \tl_set:Nn \l_test_tl{(#1) (#2) (#3)} \cs_show:N \l_test_tl }
 \DeclareDocumentEnvironment { bazIIId } { o m o } {  } 
     { \tl_set:Nn \l_test_tl{(#1) (#2) (#3)} \cs_show:N \l_test_tl }
\TIMO

\TEST{passing~ of~ args~ to~ end:~ display~ correct~ args}{
  \bazI{A}         \endbazI       1234
  \bazII{A}{B}     \endbazII      1234
  \bazIII{A}{B}{C} \endbazIII     1234
  \bazIIIa[A]{B}   \endbazIIIa    1234
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\DeclareDocumentCommand\insert{+l +m}
   { \tl_set:Nn \l_test_tl{(#1) (#2)}
     \cs_show:N \l_test_tl }

\TEST{testing~ +l}{
\insert \foo {1}
\insert 100  {2}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\END
