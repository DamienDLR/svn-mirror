This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Joseph Wright
============================================================
TEST 1: Checking for existing definitons
============================================================
! xparse Error
(xparse) Command name `\foo' already defined!
For immediate help type H <return>.
 ...                                              
l.46 }
You have used \NewDocumentCommand
with a command that already has a definition.
Perhaps you meant \RenewDocumentCommand.
! xparse Error
(xparse) Command `\foo' not yet defined!
For immediate help type H <return>.
 ...                                              
l.46 }
You have used \RenewDocumentCommand
with a command that was never defined.
Perhaps you meant \NewDocumentCommand.
> \foo=\protected macro:
->First definiton.
<argument> \foo 
l.46 }
============================================================
============================================================
TEST 2: Commands with simple mandatory arguments
============================================================
> \foo=\protected macro:
#1->(#1).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2->(#1)(#2).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3->(#1)(#2)(#3).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4#5->(#1)(#2)(#3)(#4)(#5).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4#5#6->(#1)(#2)(#3)(#4)(#5)(#6).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4#5#6#7->(#1)(#2)(#3)(#4)(#5)(#6)(#7).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4#5#6#7#8->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8).
<argument> \foo 
l.72 }
> \foo=\protected macro:
#1#2#3#4#5#6#7#8#9->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8)(#9).
<argument> \foo 
l.72 }
============================================================
============================================================
TEST 3: Command with too many arguments
============================================================
! This is a LaTeX bug: check coding!
! You're trying to define the command `\foo' with 10 arguments but I only allow
 0-9 arguments. Perhaps you forgot to use a colon in the function name? I can p
robably not help you here
For immediate help type H <return>.
 ...                                              
l.77 }
There is a coding bug somewhere around here.
This probably needs examining by an expert.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
> \foo=undefined.
<argument> \foo 
l.77 }
============================================================
============================================================
TEST 4: Commands with one long mandatory argument
============================================================
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1->(#1).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_2:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_3:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_4:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4#5->(#1)(#2)(#3)(#4)(#5).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_5:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4#5#6->(#1)(#2)(#3)(#4)(#5)(#6).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_6:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4#5#6#7->(#1)(#2)(#3)(#4)(#5)(#6)(#7).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_7:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4#5#6#7#8->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8).
<recently read> \\foo 
l.103 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_8:w \xparse_grab_m_long:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.103 }
> \\foo=\long macro:
#1#2#3#4#5#6#7#8#9->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8)(#9).
<recently read> \\foo 
l.103 }
============================================================
============================================================
TEST 5: Commands with one processed mandatory argument
============================================================
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1->(#1).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_2:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_3:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_4:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4#5->(#1)(#2)(#3)(#4)(#5).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_5:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4#5#6->(#1)(#2)(#3)(#4)(#5)(#6).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_6:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4#5#6#7->(#1)(#2)(#3)(#4)(#5)(#6)(#7).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_7:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4#5#6#7#8->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8).
<recently read> \\foo 
l.130 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_8:w \xparse_process_arg:n {\foo }\xparse_grab_m:w \toks_use:N \l
_xparse_args_toks .
<argument> \foo 
l.130 }
> \\foo=\long macro:
#1#2#3#4#5#6#7#8#9->(#1)(#2)(#3)(#4)(#5)(#6)(#7)(#8)(#9).
<recently read> \\foo 
l.130 }
============================================================
============================================================
TEST 6: Various mandatory combinations
============================================================
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_l:w \xparse_grab_m_1:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.143 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.143 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_l:w \xparse_grab_m_1:w \toks_use:N \l_xparse_ar
gs_toks .
<argument> \foo 
l.143 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.143 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_u:w {end}\xparse_grab_u:w {stop!}\toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.143 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.143 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_l:w \xparse_grab_l:w \xparse_grab_l:w \toks_use:N \l_xparse_args_t
oks .
<argument> \foo 
l.143 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.143 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_l_long:w \xparse_process_arg:n {\foo }\xparse_grab_u:w {end}\toks_
use:N \l_xparse_args_toks .
<argument> \foo 
l.143 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.143 }
============================================================
============================================================
TEST 7: Optional argument creation
============================================================
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_t:w *\xparse_grab_D:w []{\NoValue }\xparse_grab_m_1:w \toks_use:N 
\l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.159 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_t:w +\xparse_grab_D:w (){\NoValue }\xparse_grab_m_long:w \toks_use
:N \l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.159 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_t_long:w \par \xparse_grab_D:w []{default}\xparse_grab_m_3:w \toks
_use:N \l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3#4#5->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.159 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_D:w []{\NoValue }\xparse_grab_m_1:w \xparse_gra
b_D_trailing:w []{\NoValue }\toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.159 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_G:w {\NoValue }\xparse_grab_D:w []{\NoValue }\x
parse_grab_m_1:w \toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.159 }
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_G:w {test}\xparse_grab_t:w *\xparse_grab_m_1:w 
\toks_use:N \l_xparse_args_toks .
<argument> \foo 
l.159 }
> \\foo=\long macro:
#1#2#3#4->(#1)(#2)(#3)(#4).
<recently read> \\foo 
l.159 }
============================================================
============================================================
TEST 8: Unknown argument types
============================================================
! xparse Error
(xparse) Unknown argument type `n' replaced by `m'. Fingers crossed ...
For immediate help type H <return>.
 ...                                              
l.166 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
> \foo=\protected macro:
#1#2#3->.
<argument> \foo 
l.166 }
! xparse Error
(xparse) Unknown argument type `a' replaced by `m'. Fingers crossed ...
For immediate help type H <return>.
 ...                                              
l.166 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
! xparse Error
(xparse) Unknown argument type `b' replaced by `m'. Fingers crossed ...
For immediate help type H <return>.
 ...                                              
l.166 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
! xparse Error
(xparse) Unknown argument type `c' replaced by `m'. Fingers crossed ...
For immediate help type H <return>.
 ...                                              
l.166 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
> \foo=\protected macro:
#1#2#3->.
<argument> \foo 
l.166 }
============================================================
============================================================
TEST 9: Some valid expandable functions
============================================================
> \foo=macro:
#1->(#1).
<argument> \foo 
l.183 }
> \foo=\long macro:
#1->(#1).
<argument> \foo 
l.183 }
> \foo=macro:
#1#2#3->(#1)(#2)(#3).
<argument> \foo 
l.183 }
> \foo=macro:
->\\foo1 x\q_xparse_stop .
<argument> \foo 
l.183 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.183 }
> \foo=macro:
->\\foo1 x\q_xparse_stop .
<argument> \foo 
l.183 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.183 }
> \foo=macro:
->\\foo1 x\q_xparse_stop .
<argument> \foo 
l.183 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.183 }
> \foo=macro:
->\\foo1 x\q_xparse_stop .
<argument> \foo 
l.183 }
> \\foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \\foo 
l.183 }
============================================================
============================================================
TEST 10: Not valid as expandable functions
============================================================
! xparse Error
(xparse) Expandable command signature ends in optional argument.
For immediate help type H <return>.
 ...                                              
l.192 }
Expandable functions must have a final mandatory argument.
> \foo=undefined.
<argument> \foo 
l.192 }
! xparse Error
(xparse) Inconsistent long arguments.
For immediate help type H <return>.
 ...                                              
l.192 }
Expandable commands must have all arguments long if any at all.
! xparse Error
(xparse) Inconsistent long arguments.
For immediate help type H <return>.
 ...                                              
l.192 }
Expandable commands must have all arguments long if any at all.
> \foo=\long macro:
#1#2#3->(#1)(#2)(#3).
<argument> \foo 
l.192 }
! xparse Error
(xparse) Inconsistent long arguments.
For immediate help type H <return>.
 ...                                              
l.192 }
Expandable commands must have all arguments long if any at all.
> \foo=macro:
->\\foo1 x\q_xparse_stop .
<argument> \foo 
l.192 }
> \\foo=\long macro:
#1#2->(#1)(#2).
<recently read> \\foo 
l.192 }
============================================================
============================================================
TEST 11: Separating out interface and implementation
============================================================
> \foo=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\foo }
\xparse_grab_m_1:w \xparse_grab_D_trailing:w []{\NoValue }\toks_use:N \l_xparse
_args_toks .
<argument> \foo 
l.200 }
> \\foo=\long macro:
#1#2->\use:c {implementation_foo:w}.
<recently read> \\foo 
l.200 }
> \implementation_foo:w=\long macro:
#1#2->``foo''.
<recently read> \implementation_foo:w 
l.200 }
> \implementation_foo:w=\long macro:
#1#2->(#1)(#2).
<recently read> \implementation_foo:w 
l.200 }
============================================================
============================================================
TEST 12: Checking for existing environments
============================================================
! xparse Error
(xparse) Environment `foo' already defined!
For immediate help type H <return>.
 ...                                              
l.216 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
! xparse Error
(xparse) Environment `foo' not yet defined!
For immediate help type H <return>.
 ...                                              
l.216 }
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit
> \environment_begin_foo:w=\protected macro:
->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse_args_
toks First.
<recently read> \environment_begin_foo:w 
l.216 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.216 }
> \environment_end_foo_aux:w=\long macro:
->First.
<recently read> \environment_end_foo_aux:w 
l.216 }
============================================================
============================================================
TEST 13: Valid enviroment declarations
============================================================
> \environment_begin_foo:w=\protected macro:
#1#2#3->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse
_args_toks (#1)(#2)(#3).
<recently read> \environment_begin_foo:w 
l.234 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.234 }
> \environment_end_foo_aux:w=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \environment_end_foo_aux:w 
l.234 }
> \environment_begin_foo:w=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\envir
onment_begin_foo:w }\xparse_grab_t:w *\xparse_grab_D:w []{\NoValue }\xparse_gra
b_m_1:w \toks_use:N \l_xparse_args_toks .
<recently read> \environment_begin_foo:w 
l.234 }
> \\environment_begin_foo:w=\long macro:
#1#2#3->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse
_args_toks (#1)(#2)(#3).
<recently read> \\environment_begin_foo:w 
l.234 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.234 }
> \environment_end_foo_aux:w=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \environment_end_foo_aux:w 
l.234 }
> \environment_begin_foo:w=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\envir
onment_begin_foo:w }\xparse_grab_t:w *\xparse_grab_D:w []{\NoValue }\xparse_gra
b_m_long:w \toks_use:N \l_xparse_args_toks .
<recently read> \environment_begin_foo:w 
l.234 }
> \\environment_begin_foo:w=\long macro:
#1#2#3->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse
_args_toks (#1)(#2)(#3).
<recently read> \\environment_begin_foo:w 
l.234 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.234 }
> \environment_end_foo_aux:w=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \environment_end_foo_aux:w 
l.234 }
> \environment_begin_foo:w=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\envir
onment_begin_foo:w }\xparse_grab_u:w {stop}\xparse_grab_D:w []{\NoValue }\xpars
e_grab_m_1:w \toks_use:N \l_xparse_args_toks .
<recently read> \environment_begin_foo:w 
l.234 }
> \\environment_begin_foo:w=\long macro:
#1#2#3->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse
_args_toks (#1)(#2)(#3).
<recently read> \\environment_begin_foo:w 
l.234 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.234 }
> \environment_end_foo_aux:w=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \environment_end_foo_aux:w 
l.234 }
> \environment_begin_foo:w=\protected macro:
->\int_zero:N \l_xparse_processor_int \toks_set:Nn \l_xparse_args_toks {\\envir
onment_begin_foo:w }\xparse_grab_m_1:w \xparse_grab_D_trailing:w []{\NoValue }\
xparse_grab_D_trailing:w []{\NoValue }\toks_use:N \l_xparse_args_toks .
<recently read> \environment_begin_foo:w 
l.234 }
> \\environment_begin_foo:w=\long macro:
#1#2#3->\group_begin: \toks_set_eq:NN \l_xparse_environment_args_toks \l_xparse
_args_toks (#1)(#2)(#3).
<recently read> \\environment_begin_foo:w 
l.234 }
> \environment_end_foo:w=macro:
->\exp_last_unbraced:NV \environment_end_foo_aux:N \l_xparse_environment_args_t
oks \group_end: .
<recently read> \environment_end_foo:w 
l.234 }
> \environment_end_foo_aux:w=\long macro:
#1#2#3->(#1)(#2)(#3).
<recently read> \environment_end_foo_aux:w 
l.234 }
============================================================
