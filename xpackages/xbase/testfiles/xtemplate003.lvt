%
% Copyright (C) 2009 LaTeX3 Project
% 

\documentclass{minimal}
\input{regression-test}

\RequirePackage{xtemplate}

\begin{document}
\START
\AUTHOR{Frank Mittelbach}
\ExplSyntaxOn

\OMIT
\TIMO


\cs_new:Npn \ERROR {\typeout{~}\typeout{***~ ==>~TEST~ SHOWS~ ERRORS~<==~
***}\typeout{~}}
\cs_new:Npn \IMPROVE {\typeout{~}\typeout{^^J^^J***~ ==>~RESULT~ COULD~ BE~ IMPROVED~<==~
***}\typeout{~}}

\DeclareObjectType { test } {0}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Testing~object~types}{
  \DeclareObjectType { too-big } {10}                  % no error
  \DeclareTemplateInterface{ too-big } {tname} {10} {} % wrong error
\ERROR

  \DeclareTemplateInterface{ not-defined} {tname} 0 {} % not defined error, ok
  \DeclareObjectType { now-defined } 2
  \DeclareTemplateInterface{ now-defined} {tname} 2 {} % no error, ok

\ERROR kills job so jump over for now:
\iffalse
  \int_set:Nn \l_test_int {2}
  \DeclareTemplateInterface{ now-defined} {tname} {\l_test_int} {} % error
\fi

  \DeclareTemplateInterface{ now-defined} {tname} 1 {} % error, ok but better
                                                       % message
\IMPROVE
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Testing~key~types}{

  \DeclareTemplateInterface{ test } {tname} {0} 
      { key : misspelled = 0 }                      % error ok, but should list keytypes
\IMPROVE

  \DeclareTemplateInterface{ test } {tname} {0} 
      { key 1 : boolean  ,
        key 2 : choice {a, b} ,
        key 3 : code ,
        key 4 : commalist ,
        key 5 : function 3 ,
        key 6 : instance {foo} ,
        key 7 : integer ,
        key 8 : length ,
        key 9 : skip ,
        key 10 : tokenlist ,
      }
  \ShowTemplateKeytypes { test }  { tname }               % ok

  \DeclareTemplateInterface{ test } {tname} {0} 
      {
        key1 : choice ,                                   % missing syntax component
        key2 : function ,                                 % not detected
        key3 : instance ,
      }   
  \ShowTemplateKeytypes { test }  { tname }
\ERROR
 
  \DeclareTemplateInterface{ test } {tname} {0} 
      { key : boolean  = another dimension }              % not detected (but
  \ShowTemplateKeytypes { test }  { tname }               % probably ok
  \ShowTemplateDefaults { test }  { tname }
\ERROR                                                       
 
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Testing~key~names}{

  \DeclareTemplateInterface{ test } {tname} {0} 
      { key : integer,
        key : boolean                                      % double keys are
                                                           %  not detected
      }

}

\END

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Template~interfaces:~correct}{
  \DeclareTemplateInterface { test-zero }  { template } 0 { 
    key-one   : tokenlist = default ,
    key-two   : tokenlist           ,
    key-three : integer   = 4       ,
    key-four  : choice { one, two, three },
    key-five  : code      = {#1}
  } 
  \ShowTemplateKeytypes { test-zero }  { template }
  \ShowTemplateDefaults { test-zero }  { template }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{Template~interfaces:~mismatches}{
  \DeclareTemplateInterface { test-zero }  { template } 1 { } 
  \DeclareTemplateInterface { test-one }   { template } 2 { }
  \DeclareTemplateInterface { test-two }   { template } 0 { }
  \DeclareTemplateInterface { undeclared } { template } 1 { } 
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

