%
% Copyright (C) 2009 LaTeX3 Project
% 

\documentclass{minimal}
\input{regression-test}

\RequirePackage{l3str}

\begin{document}
\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{str_new/set}{
  \str_new:N \l_foo_str
  \str_set:Nn \l_foo_str {a~b~c}
  \iow_term:x { \tl_length:N \l_foo_str }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{temp~variables}{
  \token_to_meaning:N \l_tmpa_str \NEWLINE
  \token_to_meaning:N \l_tmpb_str \NEWLINE
  \token_to_meaning:N \g_tmpa_str \NEWLINE
  \token_to_meaning:N \g_tmpb_str
}

\TESTEXP{single~char~strings}{
  \exp_after:wN \token_to_meaning:N \c_space_str    \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_lbrace_str   \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_rbrace_str   \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_percent_str  \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_backslash_str
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_const:Nx \c_apar_tl
  {
    \iow_char:N \a
    \c_space_str
    \token_to_str:N #
    \token_to_str:N #
    \token_to_str:N \par
    \c_space_str
  }
\TIMO

\TEST{str_new/set/const/gset}{% missing test for :Nx assignments!
  \str_new:N \l_apar_str
  \str_new:N \g_apar_str
  {
    \str_set:Nn \l_apar_str { a~#\par }
    \tl_if_eq:NNTF \l_apar_str \c_apar_tl { \TRUE } { \ERROR }
  }
  \tl_if_eq:NNTF \l_apar_str \c_empty_tl { \TRUE } { \ERROR }
  { \str_const:Nn \c_apar_str { a~#\par } }
  \tl_if_eq:NNTF \c_apar_str \c_apar_tl { \TRUE } { \ERROR }
  { \str_gset:Nn \g_apar_str { a~#\par } }
  \tl_if_eq:NNTF \g_apar_str \c_apar_tl { \TRUE } { \ERROR }
}

\TEST{tl~to~other~str}{
  \tl_set:Nn \l_tmpa_tl { a~#\par }
  \tl_set:Nx \l_tmpa_tl { \tl_to_other_str:N \l_tmpa_tl }
  \tl_if_eq:NNTF \l_tmpa_tl \c_apar_tl { \TRUE } { \ERROR }
  \tl_set:Nx \l_tmpa_tl { \tl_to_other_str:n { a~#\par } }
  \tl_if_eq:NNTF \l_tmpa_tl \c_apar_tl { \TRUE } { \ERROR }
}

\END

% Functions needing tests.
% \begin{function}[EXP]{\str_length:N}
% \begin{function}[EXP]{\str_length:n}
% \begin{function}[EXP]{\str_length_ignore_spaces:n}
% \begin{function}[EXP]{\str_length_unsafe:n}
%
% \begin{function}[EXP]{\str_head:N}
% \begin{function}[EXP]{\str_head:n}
% \begin{function}[EXP]{\str_head_ignore_spaces:n}
% \begin{function}[EXP]{\str_head_unsafe:n}
%
% \begin{function}[EXP]{\str_tail:N}
% \begin{function}[EXP]{\str_tail:n}
% \begin{function}[EXP]{\str_tail_ignore_spaces:n}
% \begin{function}[EXP]{\str_tail_unsafe:n}
%
% \begin{function}[EXP]{\str_item:Nn}
% \begin{function}[EXP]{\str_item:nn}
% \begin{function}[EXP]{\str_item_ignore_spaces:nn}
% \begin{function}[EXP]{\str_item_unsafe:nn}
%
% \begin{function}[EXP]{\str_from_to:Nnn}
% \begin{function}[EXP]{\str_from_to:nnn}
% \begin{function}[EXP]{\str_from_to_ignore_spaces:nnn}
% \begin{function}[EXP]{\str_from_to_unsafe:nnn}
%
% \begin{function}[EXP,pTF]{\str_if_eq:NN}
% \begin{function}[EXP,pTF]{\str_if_eq:nn,\str_if_eq:xx}
%
% \begin{function}[EXP,pTF]{\str_if_in:NN}
% \begin{function}[EXP,pTF]{\str_if_in:nn}
% \begin{function}[EXP,pTF]{\str_if_in_ignore_spaces:nn}
% \begin{function}[EXP,pTF]{\str_if_in_unsafe:nn}
%
% \begin{function}[TF]{\str_if_in_fast:nn}
%
% \begin{function}[EXP]{\str_sanitize_args:Nn,\str_sanitize_args:Nnn}
%
% \begin{function}[pTF]{\str_if_contains_char:nN}
