%
% Copyright (C) 2009 LaTeX3 Project
% 

\documentclass{minimal}
\input{regression-test}

\RequirePackage{l3str}

\begin{document}
\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{str_new/set}{
  \str_new:N \l_foo_str
  \str_set:Nn \l_foo_str {a~b~c}
  \iow_term:x { \tl_length:N \l_foo_str }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{temp~variables}{
  \token_to_meaning:N \l_tmpa_str \NEWLINE
  \token_to_meaning:N \l_tmpb_str \NEWLINE
  \token_to_meaning:N \g_tmpa_str \NEWLINE
  \token_to_meaning:N \g_tmpb_str
}

\TESTEXP{single~char~strings}{
  \exp_after:wN \token_to_meaning:N \c_space_str     \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_lbrace_str    \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_rbrace_str    \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_percent_str   \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_backslash_str \NEWLINE
  \exp_after:wN \token_to_meaning:N \c_hash_str
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_const:Nx \c_apar_tl
  {
    \iow_char:N \a
    \c_space_str
    \token_to_str:N #
    \token_to_str:N #
    \token_to_str:N \par
    \c_space_str
  }
\TIMO

\TEST{str_new/set/const/gset}{% missing test for :Nx assignments!
  \str_new:N \l_apar_str
  \str_new:N \g_apar_str
  {
    \str_set:Nn \l_apar_str { a~#\par }
    \tl_if_eq:NNTF \l_apar_str \c_apar_tl { \TRUE } { \ERROR }
  }
  \tl_if_eq:NNTF \l_apar_str \c_empty_tl { \TRUE } { \ERROR }
  { \str_const:Nn \c_apar_str { a~#\par } }
  \tl_if_eq:NNTF \c_apar_str \c_apar_tl { \TRUE } { \ERROR }
  { \str_gset:Nn \g_apar_str { a~#\par } }
  \tl_if_eq:NNTF \g_apar_str \c_apar_tl { \TRUE } { \ERROR }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TEST{tl~to~other~str}{
  \tl_set:Nn \l_tmpa_tl { a~#\par }
  \tl_set:Nx \l_tmpa_tl { \tl_to_other_str:N \l_tmpa_tl }
  \tl_if_eq:NNTF \l_tmpa_tl \c_apar_tl { \TRUE } { \ERROR }
  \tl_set:Nx \l_tmpa_tl { \tl_to_other_str:n { a~#\par } }
  \tl_if_eq:NNTF \l_tmpa_tl \c_apar_tl { \TRUE } { \ERROR }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\str_set:Nn \l_foo_str { foo\Z#~{~}\par }
\TESTEXP{str~length}{
  | \str_length:N \l_foo_str
  | \str_length:n { foo\Z#~{~}\par }
  | \str_length_ignore_spaces:n { foo\Z#~{~}\par }
  | \exp_args:No \str_length_unsafe:n { \l_foo_str }
  | \tl_length:n { foo\Z#~{~}\par }
}

\group_begin:
  \int_set:Nn \tex_escapechar:D { -1 }
  \char_set_catcode_other:N \Z
  \TESTEXP{str~length}{
    | \str_length:N \l_foo_str
    | \str_length:n { foo\Z#~{~}\par }
    | \str_length_ignore_spaces:n { foo\Z#~{~}\par }
    | \exp_args:No \str_length_unsafe:n { \l_foo_str }
    | \tl_length:n { foo\Z#~{~}\par }
  }
\group_end:

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{str~head}{
  | \str_head:N \l_foo_str
  | \str_head:n { foo\Z#~{~}\par }
  | \str_head_ignore_spaces:n { foo\Z#~{~}\par }
  | \exp_args:No \str_head_unsafe:n { \l_foo_str }
  | \str_head:n { ~ foo\Z#~{~}\par }
  | \str_head_ignore_spaces:n { ~ foo\Z#~{~}\par }
  | \str_head:n { }
  | \str_head_ignore_spaces:n { ~ }
  |
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{str~tail}{
  | \str_tail:N \l_foo_str
  | \str_tail:n { foo\Z#~{~}\par }
  | \str_tail_ignore_spaces:n { foo\Z#~{~}\par }
  | \exp_args:No \str_tail_unsafe:n { \l_foo_str }
  | \str_tail:n { ~ foo\Z#~{~}\par }
  | \str_tail_ignore_spaces:n { ~ foo\Z#~{~}\par }
  | \str_tail:n { }
  | \str_tail_ignore_spaces:n { ~ }
  |
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{str~item}{
  | \str_item:Nn \l_foo_str { 0 }
  | \str_item:Nn \l_foo_str { 1 }
  | \str_item:Nn \l_foo_str { 16 }
  | \str_item:Nn \l_foo_str { 17 }
  | \str_item:Nn \l_foo_str { -1 }
  | \str_item:Nn \l_foo_str { - 17 }
  | \str_item:Nn \l_foo_str { - 18 }
  | \str_item:nn { foo\Z#~{~}\par } { 10 }
  | \str_item_ignore_spaces:nn { foo\Z#~{~}\par } { 10 }
  | \exp_args:No \str_item_unsafe:nn { \l_foo_str } { 10 }
  | \str_item:nn { ~ foo\Z#~{~}\par } { 10 }
  | \str_item_ignore_spaces:nn { ~ foo\Z#~{~}\par } { 10 }
  | \str_item:nn { } { 0 }
  | \str_item:nn { } { 1 }
  | \str_item:nn { } { -1 }
  | \str_item_ignore_spaces:nn { ~ } { 0 }
  | \str_item_ignore_spaces:nn { ~ } { 1 }
  | \str_item_ignore_spaces:nn { ~ } { -1 }
  |
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{str~from~to}{
  | \str_from_to:Nnn \l_foo_str { 0 } { 0 }
  | \str_from_to:Nnn \l_foo_str { 1 } { 5 }
  | \str_from_to:Nnn \l_foo_str { 5 } { 9 }
  | \str_from_to:Nnn \l_foo_str { 16 } { 17 }
  | \str_from_to:Nnn \l_foo_str { 17 } { 0 }
  | \str_from_to:Nnn \l_foo_str { -1 } { 14 }
  | \str_from_to:Nnn \l_foo_str { - 17 } { 5 }
  | \str_from_to:Nnn \l_foo_str { - 18 } { 5 }
  | \str_from_to:nnn { foo\Z#~{~}\par } { 7 } { 10 }
  | \str_from_to_ignore_spaces:nnn { foo\Z#~{~}\par } { 7 } { 10 }
  | \exp_args:No \str_from_to_unsafe:nnn { \l_foo_str } { 7 } { 10 }
  | \str_from_to:nnn { ~ foo\Z#~{~}\par } { 7 } { 10 }
  | \str_from_to_ignore_spaces:nnn { ~ foo\Z#~{~}\par } { 7 } { 10 }
  | \str_from_to:nnn { } { 0 } { 0 }
  | \str_from_to:nnn { } { 0 } { 1 }
  | \str_from_to:nnn { } { -1 } { -1 }
  | \str_from_to_ignore_spaces:nnn { ~ } { 0 } { 0 }
  | \str_from_to_ignore_spaces:nnn { ~ } { 0 } { 1 }
  | \str_from_to_ignore_spaces:nnn { ~ } { -1 } { 0 }
  |
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\str_set:Nn \l_foo_str { a~b \par # }
\str_set:Nx \l_bar_str
  {
    a \c_space_str b
    \c_backslash_str par \c_space_str
    \c_hash_str \c_hash_str
  }
\TESTEXP{str~if~eq}{
  \str_if_eq:NNTF \l_foo_str \l_bar_str { \TRUE } { \ERROR } ~
  \str_if_eq:NNTF \l_foo_str \c_backslash_str { \ERROR } { \FALSE } ~
  \str_if_eq:xxTF { \l_foo_str } { a~b \iow_char:N \\ par ~ # }
    { \TRUE } { \ERROR }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\TESTEXP{str~if~contains~char}{
  \str_if_contains_char:nNTF { a~b \par # } \\ { \TRUE } { \ERROR } ~
  \str_if_contains_char:nNTF { a~b \par # } \  { \TRUE } { \ERROR } ~
  \str_if_contains_char:nNTF { a~b \par # } \~ { \ERROR } { \FALSE } ~
  \str_if_contains_char:nNTF { } \  { \ERROR } { \FALSE } ~
  \str_if_contains_char:nNTF { ~ } \ { \TRUE } { \ERROR }
}

\END
