% \iffalse
% 
%% File l3hooks.dtx (C) Copyright 2011 LaTeX3 Project
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% This file is part of the "l3kernel bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%%
%% The released version of this bundle is available from CTAN.
%%
%% -----------------------------------------------------------------------
%%
%% The development version of the bundle can be found at
%%
%%    http://www.latex-project.org/svnroot/experimental/trunk/
%%
%% for those people who are interested.
%%
%%%%%%%%%%%
%% NOTE: %%
%%%%%%%%%%%
%%
%%   Snapshots taken from the repository represent work in progress and may
%%   not work or may contain conflicting material!  We therefore ask
%%   people _not_ to put them into distributions, archives, etc. without
%%   prior consultation with the LaTeX Project Team.
%%
%% -----------------------------------------------------------------------
%%
%
%<*driver|package>
\RequirePackage{l3names}
\GetIdInfo$Id: l3hooks.dtx 2480 2011-06-20 17:25:23Z bruno $
  {L3 Experimental token register hooks}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \title{^^A
%   The \pkg{l3hooks} package\\ Token register hooks^^A
%   \thanks{This file describes v\ExplFileVersion,
%      last revised \ExplFileDate.}^^A
% }
%
% \author{^^A
%  The \LaTeX3 Project\thanks
%    {^^A
%      E-mail:
%        \href{mailto:latex-team@latex-project.org}
%          {latex-team@latex-project.org}^^A
%    }^^A
% }
%
% \date{Released \ExplFileDate}
%
% \maketitle
%
% \begin{documentation}
%
% \section{Hooks}
%
% \begin{function}{\everypar,\everymath,\everydisplay,
%                  \everyhbox,\everyvbox,\evercr}
% \begin{syntax}
%   \cs{everypar} \Arg{tokens}
% \end{syntax}
%   These commands are used to alter/replace the main hooks into these
%   elements. It is \emph{not recommended} that you use these since older
%   package authors may override any changes you make here.
% \end{function}
%
% \begin{table}
%   \centering
%   \begin{tabular}{@{}>{\sffamily}rl@{}}
%     \toprule
%     Hook name & Insertion point \\
%     \midrule
%     par       & Paragraph      \\
%     math      & Inline maths   \\
%     display   & Display maths  \\
%     hbox      & Horizontal box \\
%     vbox      & Vertical box   \\
%     cr        & Tabular item   \\
%     \bottomrule
%   \end{tabular}
%   \caption{Hooks.}
%   \label{tab:hooks}
% \end{table}
%
% \section{Functions}
%
% \begin{function}{\hook_pre_push:nn, \hook_post_push:nn}
%   \begin{syntax}
%     \cs{hook_pre_push:nn}  \Arg{hook name} \Arg{tokens}
%     \cs{hook_post_push:nn} \Arg{hook name} \Arg{tokens}
%   \end{syntax}
%   Adds \meta{tokens} either before or after the main \meta{hook} for an
%   element. You should not assume the order in which pushed material is
%   finally executed in the hook.
%
%   See Table~\ref{tab:hooks} for the hooks provided.
% \end{function}
%
% \begin{function}{\hook_pre_pop:n,\hook_post_pop:n}
%   \begin{syntax}
%     \cs{hook_pre_pop:n}  \Arg{hook}
%     \cs{hook_post_pop:n} \Arg{hook}
%   \end{syntax}
%   Removes the last \meta{tokens} added to a hook.
% \end{function}
%
% \begin{function}{\hook_pre_once:nn, \hook_post_once:nn}
%   \begin{syntax}
%     \cs{hook_pre_once:nn} \Arg{hook} \Arg{tokens}
%     \cs{hook_pre_once:nn} \Arg{hook} \Arg{tokens}
%   \end{syntax}
%   Adds \meta{tokens} to the hook to only the next occurrence of the element
%   (\emph{i.e.}~after executing the hook once it automatically pops itself).
% \end{function}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{l3hooks} implementation}
%
%    \begin{macrocode}
%<*initex|package>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*package>
\ProvidesExplPackage
  {\ExplFileName}{\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
\package_check_loaded_expl:
%</package>
%    \end{macrocode}
%
%    \begin{macrocode}
\group_begin:
%    \end{macrocode}
%
% \begin{macro}[aux]{\hook_new:nN}
%   The hook-generator function. The primitive hook is already stored
%   by \pkg{l3names} in \cs{tex_every\meta{name}:D}, where \meta{name} is one
%   of the hook names in Table~\ref{tab:hooks}. In package mode, we keep
%   the interface \cs{every\meta{name>}}|={...}| by defining each of those
%   control sequences as toks registers.
%    \begin{macrocode}
  \cs_set_protected_nopar:Npn \_hook_new:nN #1#2
    {
      \seq_new:c { g_hook_ #1 _seq }
%<*package>
      \cs_undefine:N #2
      \newtoks #2
      \tex_global:D \exp_args:Nc #2 { tex_every #1 :D }
      \seq_gput_right:cn { g_hook_ #1 _seq } { \tex_the:D #2 }
%</package>
      \exp_args:Ncx \tex_global:D { tex_every #1 :D }
        {
          \exp_not:N \seq_use:N
          \exp_not:c { g_hook_ #1 _seq }
        }
    }
%    \end{macrocode}
% \end{macro}
%
% Don't bother with \cs{everyjob} or \cs{everyeof}.
%
% In format mode, the second argument is not used at all.
% The user-level \cs{every\meta{xyz}} functions are \emph{not}
% provided as hooks.
% In \LaTeXe{}, we want to replace the user-level \cs{every\meta{xyz}}
% functions. This provides backwards compatibility for existing code.
%    \begin{macrocode}
  \hook_new:nN { math }    \frozen@everymath
  \hook_new:nN { display } \frozen@everydisplay
  \hook_new:nN { par }     \everypar
  \hook_new:nN { hbox }    \everyhbox
  \hook_new:nN { vbox }    \everyvbox
  \hook_new:nN { cr }      \everycr
%    \end{macrocode}
%
% Clean-up: (the allocator function is never to be used again)
%    \begin{macrocode}
\group_end:
%    \end{macrocode}
%    
% \begin{variable}{\l_hook_tmp_tl}
%   Used for popping items.
%    \begin{macrocode}
\tl_new:N \l_hook_tmp_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\hook_pre_push:nn, \hook_post_push:nn}
% \begin{macro}{\hook_pre_pop:n, \hook_post_pop:n}
%   These functions are used to add/remove material from a hook, in
%   addition to the main |\everyxyz| interface. Using push/pop is more
%   reliable since you never know when a dastardly package author overrides
%   anything you might do with |\everyxyz|.
%    \begin{macrocode}
\cs_new_protected:Npn \hook_pre_push:nn #1 #2
  { \seq_gput_left:cn  { g_hook_ #1 _seq } {#2} }
\cs_new_protected:Npn \hook_post_push:nn #1 #2
  { \seq_gput_right:cn { g_hook_ #1 _seq } {#2} }
%    \end{macrocode}
%   These should have error-checking but not tonight:
%    \begin{macrocode}
\cs_new_protected:Npn \hook_pre_pop:n #1
  {
    \seq_if_empty:nF { g_hook_ #1 _ seq }
      { \seq_gpop_left:cN  { g_hook_ #1 _seq } \l_hook_tmp_tl }
  }
\cs_new_protected:Npn \hook_post_pop:n #1
  {
    \seq_if_empty:nF { g_hook_ #1 _seq }
      { \seq_gpop_right:cN { g_hook_ #1 _seq } \l_hook_tmp_tl }
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\hook_pre_once:nn,\hook_post_once:nn}
% \begin{macro}[aux]{\hook_once_aux:nn}
% Experimental functions to only execute after the next hook.
% The way to remove the function from the hook is a little bit
% clunky, but it should work.
%    \begin{macrocode}
\cs_new_protected:Npn \hook_once_aux:nn #1#2
  {
    \seq_gremove_all:cn { g_hook_ #1 _seq }
      { \hook_once_aux:nn {#1} {#2} }
    #2
  }
\cs_new_protected:Npn \hook_pre_once:nn #1#2
  {
    \hook_pre_push:nn {#1}
      { \hook_once_aux:nn {#1} {#2} }
  }
\cs_new_protected:Npn \hook_post_once:nn #1#2
  {
    \hook_post_push:nn {#1}
      { \hook_once_aux:nn {#1} {#2} }
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
%</initex|package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex