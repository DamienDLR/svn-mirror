% \iffalse meta-comment
%
%% File: l3fp-new.dtx Copyright (C) 2011 The LaTeX3 Project
%%
%% It may be distributed and/or modified under the conditions of the
%% LaTeX Project Public License (LPPL), either version 1.3c of this
%% license or (at your option) any later version.  The latest version
%% of this license is in the file
%%
%%    http://www.latex-project.org/lppl.txt
%%
%% This file is part of the "l3trial bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%%
%% The released version of this bundle is available from CTAN.
%%
%% -----------------------------------------------------------------------
%%
%% The development version of the bundle can be found at
%%
%%    http://www.latex-project.org/svnroot/experimental/trunk/
%%
%% for those people who are interested.
%%
%%%%%%%%%%%
%% NOTE: %%
%%%%%%%%%%%
%%
%%   Snapshots taken from the repository represent work in progress and may
%%   not work or may contain conflicting material!  We therefore ask
%%   people _not_ to put them into distributions, archives, etc. without
%%   prior consultation with the LaTeX3 Project.
%%
%% -----------------------------------------------------------------------
%
%<*driver|package>
\RequirePackage{expl3}
\GetIdInfo$Id$
  {L3 Experimental floating points}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%
% \title{^^A
%   The \textsf{l3fp-new} package: floating points^^A
%   \thanks{This file describes v\ExplFileVersion,
%     last revised \ExplFileDate.}^^A
% }
%         
% \author{^^A
%  The \LaTeX3 Project\thanks
%    {^^A
%      E-mail:
%        \href{mailto:latex-team@latex-project.org}
%          {latex-team@latex-project.org}^^A
%    }^^A
% }
%
% \date{Released \ExplFileDate}
%
% \maketitle
%
% \begin{documentation}
%
% This module is a wrapper around the following submodules:
% \begin{itemize}
% \item \pkg{l3fp-aux} for auxiliary functions needed by all
%   other submodules,
% \item \pkg{l3fp-basics} for the implementation of elementary
%   arithmetic (addition, subtraction, multiplication, division),
% \item \pkg{l3fp-convert} for conversions to various formats,
% \item \pkg{l3fp-parse} for parsing expressions,
% \item \pkg{l3fp-assign} for all assignments.
% \end{itemize}
% It ensures that the submodules are loaded in the correct order,
% and is meant to collect the documentation for all user commands
% of those submodules, which will therefore mostly consist of
% their commented source.
% 
% To load all submodules just include the following line in the preamble.
% \begin{verbatim}
%   \RequirePackage{l3fp-new}
% \end{verbatim}
% 
% \section{Floating points}
% 
% Here, there may be a discussion of what floating point numbers
% are, and a list of relevant resources (\emph{e.g.}, some of
% Kahan's articles), and previous \TeX{} packages.
% 
% \section{Input: floating point expressions}
% 
% This section might address the question of what a floating point
% expression is.
% 
% \section{Output}
% 
% Here would be described \cs{fp_use:n}, \cs{fp_to_dim:n},
% and \cs{fp_to_tl:n}.
%
% \begin{function}{\fp_use:n}
%   \begin{syntax}
%     \cs{fp_use:n} \Arg{floating point expression}
%   \end{syntax}
%   This function yields the result of computing the
%   \meta{floating point expression}, in the
%   form\footnote{Bruno: this ought to be shifted by $1$
%     to make it more conventional. Temporarily it is named
%     \cs{fp_convert_use:n} for compatibility reasons.}
%   \[
%   \pm 0.\meta{16 digits} \mathrm{e} \meta{exponent}
%   \]
% \end{function}
%
% \begin{function}{\fp_to_dim:n}
%   \begin{syntax}
%     \cs{fp_to_dim:n} \Arg{floating point expression}
%   \end{syntax}
%   This function yields the result of computing the
%   \meta{floating point expression}, in a form suitable
%   for \TeX{}'s dimensions, in points.\footnote{Bruno:
%     not implemented yet.}
% \end{function}
%
% \begin{function}{\fp_to_tl:n}
%   \begin{syntax}
%     \cs{fp_to_tl:n} \Arg{floating point expression}
%   \end{syntax}
%   This function yields the result of computing the
%   \meta{floating point expression}, in a form comparable
%   to the output of a calculator. In particular, traililng
%   zeros are trimmed.\footnote{Bruno: not implemented yet.}
% \end{function}
%
% \subsection{Rounding}
% 
% This explains how to go from a floating point number to a
% rounded value for various applications. Perhaps worth coding
% functionalities up to what siunitx can do on this matter.
% 
% \section{Assignments}
%
% All function names below contain |assign_| to distinguish them
% from the current \pkg{l3fp} implementation. This will be changed,
% of course, when we switch.\footnote{Bruno: remove once done.}
%
% \begin{function}{\fp_assign_new:N,\fp_assign_new:c}
%   \begin{syntax}
%     \cs{fp_assign_new:N} \meta{fp~var}
%   \end{syntax}
%   Creates a new \meta{fp~var} or raises an error if the
%   name is already taken. The declaration is global. The
%   \meta{tl~var} will initially be a (quiet)
%   \texttt{nan}.\footnote{Bruno: should it be $+0$?}
% \end{function}
%
% \begin{function}{\fp_assign_const:Nn, \fp_assign_const:cn}
%   \begin{syntax}
%     \cs{fp_assign_const:Nn} \meta{fp~var} \Arg{floating point expression}
%   \end{syntax}
%   Creates a new constant \meta{fp~var} or raises an error
%   if the name is already taken. The value of the \meta{fp~var}
%   will be set globally to the result of evaluating the
%   \meta{floating point expression}.
% \end{function}
%
% \begin{function}{\fp_assign_set_eq:NN, \fp_assign_set_eq:cN,
%     \fp_assign_set_eq:Nc, \fp_assign_set_eq:cc}
%   \begin{syntax}
%     \cs{fp_assign_set_eq:NN} \meta{fp~var1} \meta{fp~var2}
%   \end{syntax}
%   Sets the floating point variable \meta{fp~var1} equal to
%   the current value of \meta{tl~var2}. This assignment is
%   restricted to the current \TeX{} group level.
% \end{function}
%
% \begin{function}{\fp_assign_gset_eq:NN, \fp_assign_gset_eq:cN,
%     \fp_assign_gset_eq:Nc, \fp_assign_gset_eq:cc}
%   \begin{syntax}
%     \cs{fp_assign_gset_eq:NN} \meta{fp~var1} \meta{fp~var2}
%   \end{syntax}
%   Sets the floating point variable \meta{tl~var1} equal to the
%   current value of \meta{tl~var2}. This assignment is global and
%   so is not limited by the current \TeX{} group level.
% \end{function}
%
% \begin{function}{\fp_assign_set:Nn,\fp_assign_set:cn}
%   \begin{syntax}
%     \cs{fp_assign_set:Nn} \meta{fp~var} \Arg{floating point expression}
%   \end{syntax}
%   Sets \meta{fp~var} to the result of computing the
%   \meta{floating point expression}. This assignment
%   is restricted to the current \TeX{} group.
% \end{function}
%
% \begin{function}{\fp_assign_gset:Nn,\fp_assign_gset:cn}
%  \begin{syntax}
%     \cs{fp_assign_gset:Nn} \meta{fp~var} \Arg{floating point expression}
%   \end{syntax}
%   Sets \meta{fp~var} to the result of computing the
%   \meta{floating point expression}. This assignment
%   is global and is not limited to the current \TeX{}
%   group level.
% \end{function}
%
% \end{documentation}
%
% \begin{implementation}
%
% \section{\pkg{l3fp-new} implementation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%    
%
%    \begin{macrocode}
\ProvidesExplPackage
  {\ExplFileName}{\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
%    \end{macrocode}
%
% Load submodules in the right order.
%    \begin{macrocode}
\RequirePackage{
  l3fp-aux,
  l3fp-convert,
  l3fp-parse,
  l3fp-assign,
  l3fp-basics,
  l3fp-expo
}
%    \end{macrocode}
%    
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \end{implementation}
% 
% \PrintIndex
