This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
Author: Bruno Le Floch
============================================================
TEST 1: Misc
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abb}
>  {a}
>  {b}.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abcccbcc}
>  {a}
>  {cc}.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {ab}
>  {ab}
>  {ab}
>  {ab}.
<recently read> }
l.47 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {aaa}
>  {aaa}
>  {}
>  {}
>  {}
>  {}.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {LaTeX is nice! It is nice!!!}
>  {La}
>  {eX}
>  {X}
>  { It is nice!!}
>  {It }.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {XeTeX is nice is nice!!}
>  {Xe}
>  {eX}
>  {X}
>  { is nice!!}
>  {}.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {ac}
>  {a}.
<recently read> }
l.47 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abbc}
>  {bb}.
<recently read> }
l.47 }
============================================================
============================================================
TEST 2: Simple strings n
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abcabcabX}.
<recently read> }
l.80 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {}.
<recently read> }
l.80 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.80 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.80 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {ab}.
<recently read> }
l.80 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {^^@^^A^^B^^C^^D^^E^^F^^G^^H	
^^L^^M^^N^^O^^P^^Q^^R^^S^^T^^U^^V^^W^^X^^Y^^Z^^[^^\^^]^^^^^_ !"#$%&'()*+,-./01
23456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~^^
?}.
<recently read> }
l.80 }
============================================================
============================================================
TEST 3: Regex set
============================================================
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.92 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.92 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abc}.
<recently read> }
l.92 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {ab}
>  {abcccc!}.
<recently read> }
l.92 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.92 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {ab}
>  {}
>  {abccc}
>  {ccc}.
<recently read> }
l.92 }
============================================================
============================================================
TEST 4: Quantifiers at wrong places
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {*abc}.
<recently read> }
l.99 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {???c}.
<recently read> }
l.99 }
============================================================
============================================================
TEST 5: Character types
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {.^^@.\ÿ.\ }
>  {.\ }.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {d0d1d2d3d4d5d6d7d8d9}
>  {d9}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {h\	h h\ }
>  {h\ }.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {s\	s\
s\^^Ls\^^Ms\ }
>  {s\ }.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {v\
v\v\^^Lv\^^M}
>  {v\^^M}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {wawbwcwdwywzwAwBwZw_w0w9}
>  {w9}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {NaNbN*N\#N\ÿN\^^@N\}
>  {N\}
>  {NN}
>  {NN}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {D/D:}
>  {D:}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {H\
H\a H\*H\^^M}
>  {H\^^M}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\}
>  {S\a}
>  {S\a}
>  {S\#S\@}
>  {S\@}
>  {S\S\^^@}
>  {S\^^@}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {V\	V\ V\a V\~}
>  {V\~}.
<recently read> }
l.119 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {W?W*W/W:W{W}W@W[W]W^W`W?}
>  {W?}.
<recently read> }
l.119 }
============================================================
============================================================
TEST 6: Special characters
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {*+^^@{x}^^@^^@*b}
>  {*b}.
<recently read> }
l.138 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {^^@{x}^^@}
>  {}.
<recently read> }
l.138 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.138 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {*+,-./*+,-./*+,-./*+,-./}.
<recently read> }
l.138 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {\^^G\^^[\^^L\
\^^M\	}.
<recently read> }
l.138 }
============================================================
============================================================
TEST 7: Character classes
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {\abcwxy"##$$&<=>?}.
<recently read> }
l.147 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {\%?}.
<recently read> }
l.147 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abcAB}.
<recently read> }
l.147 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {\^}.
<recently read> }
l.147 }
============================================================
============================================================
TEST 8: Nested groups with quantifiers
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {aaabccbaab!}
>  {b}
>  {a}
>  {b}
>  {c}
>  {a!}
>  {a}
>  {a}
>  {}
>  {}.
<recently read> }
l.153 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {aaabccbaab!aa!}
>  {aa}
>  {aa}
>  {b}
>  {cc}.
<recently read> }
l.153 }
============================================================
============================================================
TEST 9: Quantifiers
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {cdabaabb}
>  {abaabb}
>  {b}
>  {aabb}.
<recently read> }
l.161 }
FALSE
> \l_foo_seq=undefined.
<argument> \show \l_foo_seq 
l.161 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {aabbcdcdaabbaabb}
>  {aabbaabb}
>  {}
>  {aabb}.
<recently read> }
l.161 }
============================================================
============================================================
TEST 10: Simple assertions
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abc...}
>  {def}.
<recently read> }
l.172 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abc*}
>  {c}.
<recently read> }
l.172 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {defabcabcghi}
>  {ghi}
>  {}
>  {}.
<recently read> }
l.172 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {def}
>  {def}
>  {}
>  {}.
<recently read> }
l.172 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abc}
>  {abc}
>  {}
>  {}.
<recently read> }
l.172 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abc}
>  {abc}
>  {}
>  {}.
<recently read> }
l.172 }
============================================================
============================================================
TEST 11: Non-capturing groups and alternatives
============================================================
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abcdefghiighafj}
>  {af}
>  {a}
>  {gh}.
<recently read> }
l.180 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {abcbcfadefighj}
>  {igh}
>  {a}
>  {gh}.
<recently read> }
l.180 }
TRUE
Sequence \l_foo_seq contains the items (without outer braces):
>  {}
>  {}
>  {}
>  {}.
<recently read> }
l.180 }
============================================================
